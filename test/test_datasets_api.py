# coding: utf-8

"""
    Insights.Api

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""



import unittest

import pandas as pd

import elexonpy
from elexonpy.api.datasets_api import DatasetsApi  # noqa: E501
from elexonpy.rest import ApiException


class TestDatasetsApi(unittest.TestCase):
    """DatasetsApi unit test stubs"""

    def setUp(self):
        self.api = DatasetsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_datasets_abuc_get(self):
        """Test case for datasets_abuc_get

        Amount Of Balancing Reserves Under Contract (ABUC / B1720)  # noqa: E501
        """
        publish_date_time_from = '2022-08-22T07:43:04Z'  # datetime | 
        publish_date_time_to = '2023-08-22T07:43:04Z'  # datetime | 

        response = self.api.datasets_abuc_get(publish_date_time_from, publish_date_time_to)

        # Check if the response object is not None
        self.assertIsNotNone(response)

        # Check if the response contains data
        self.assertTrue(response.to_dict().get('data'))

    def test_datasets_abuc_get_dataframe(self):
        """Test case for datasets_abuc_get

        Amount Of Balancing Reserves Under Contract (ABUC / B1720)  # noqa: E501
        """
        publish_date_time_from = '2022-08-22T07:43:04Z'  # datetime |
        publish_date_time_to = '2023-08-22T07:43:04Z'  # datetime |

        df = self.api.datasets_abuc_get(publish_date_time_from,
                                              publish_date_time_to,
                                              format='dataframe')

        # Check if the response object is not None
        self.assertIsNotNone(df)
        assert isinstance(df, pd.DataFrame)

    def test_datasets_abuc_stream_get(self):
        """Test case for datasets_abuc_stream_get

        Amount Of Balancing Reserves Under Contract (ABUC / B1720) stream  # noqa: E501
        """
        pass

    def test_datasets_agpt_get(self):
        """Test case for datasets_agpt_get

        Actual Aggregated Generation Per Type (AGPT / B1620)  # noqa: E501
        """
        pass

    def test_datasets_agpt_stream_get(self):
        """Test case for datasets_agpt_stream_get

        Actual Aggregated Generation Per Type (AGPT / B1620) stream  # noqa: E501
        """
        pass

    def test_datasets_agws_get(self):
        """Test case for datasets_agws_get

        Actual Or Estimated Wind And Solar Power Generation (AGWS / B1630)  # noqa: E501
        """
        pass

    def test_datasets_agws_stream_get(self):
        """Test case for datasets_agws_stream_get

        Actual Or Estimated Wind And Solar Power Generation (AGWS / B1630) stream  # noqa: E501
        """
        pass

    def test_datasets_aobe_get(self):
        """Test case for datasets_aobe_get

        Accepted Offered Balancing Energy (AOBE)  # noqa: E501
        """
        pass

    def test_datasets_aobe_stream_get(self):
        """Test case for datasets_aobe_stream_get

        Accepted Offered Balancing Energy (AOBE) stream  # noqa: E501
        """
        pass

    def test_datasets_atl_get(self):
        """Test case for datasets_atl_get

        Actual Total Load Per Bidding Zone (ATL / B0610)  # noqa: E501
        """
        pass

    def test_datasets_atl_stream_get(self):
        """Test case for datasets_atl_stream_get

        Actual Total Load Per Bidding Zone (ATL / B0610) stream  # noqa: E501
        """
        pass

    def test_datasets_b1610_get(self):
        """Test case for datasets_b1610_get

        Actual Generation Output Per Generation Unit (B1610)  # noqa: E501
        """
        pass

    def test_datasets_b1610_stream_get(self):
        """Test case for datasets_b1610_stream_get

        Actual Generation Output Per Generation Unit (B1610) stream  # noqa: E501
        """
        pass

    def test_datasets_beb_get(self):
        """Test case for datasets_beb_get

        Balancing Energy Bids (BEB)  # noqa: E501
        """
        pass

    def test_datasets_beb_stream_get(self):
        """Test case for datasets_beb_stream_get

        Balancing Energy Bids (BEB) stream  # noqa: E501
        """
        pass

    def test_datasets_boalf_get(self):
        """Test case for datasets_boalf_get

        Bid Offer Acceptance Level Flagged (BOALF)  # noqa: E501
        """
        pass

    def test_datasets_boalf_stream_get(self):
        """Test case for datasets_boalf_stream_get

        Bid Offer Acceptance Level Flagged (BOALF) stream  # noqa: E501
        """
        pass

    def test_datasets_bod_get(self):
        """Test case for datasets_bod_get

        Bid Offer Data (BOD)  # noqa: E501
        """
        pass

    def test_datasets_bod_stream_get(self):
        """Test case for datasets_bod_stream_get

        Bid-Offer Data (BOD) stream  # noqa: E501
        """
        pass

    def test_datasets_cbs_get(self):
        """Test case for datasets_cbs_get

        Current Balancing State (CBS)  # noqa: E501
        """
        pass

    def test_datasets_cbs_stream_get(self):
        """Test case for datasets_cbs_stream_get

        Current Balancing State (CBS) stream  # noqa: E501
        """
        pass

    def test_datasets_ccm_get(self):
        """Test case for datasets_ccm_get

        Cost of Congestion Management (CCM / B1330)  # noqa: E501
        """
        pass

    def test_datasets_ccm_stream_get(self):
        """Test case for datasets_ccm_stream_get

        Cost of Congestion Management (CCM / B1330) stream  # noqa: E501
        """
        pass

    def test_datasets_cdn_get(self):
        """Test case for datasets_cdn_get

        Credit default notices (CDN)  # noqa: E501
        """
        pass

    def test_datasets_cdn_stream_get(self):
        """Test case for datasets_cdn_stream_get

        Credit default notices (CDN)  # noqa: E501
        """
        pass

    def test_datasets_dag_get(self):
        """Test case for datasets_dag_get

        Day-Ahead Aggregated Generation (DAG / B1430)  # noqa: E501
        """
        pass

    def test_datasets_dag_stream_get(self):
        """Test case for datasets_dag_stream_get

        Day-Ahead Aggregated Generation (DAG / B1430) stream  # noqa: E501
        """
        pass

    def test_datasets_datl_get(self):
        """Test case for datasets_datl_get

        Day-Ahead Total Load Forecast Per Bidding Zone (DATL / B0620)  # noqa: E501
        """
        pass

    def test_datasets_datl_stream_get(self):
        """Test case for datasets_datl_stream_get

        Day-Ahead Total Load Forecast Per Bidding Zone (DATL / B0620) stream  # noqa: E501
        """
        pass

    def test_datasets_dci_get(self):
        """Test case for datasets_dci_get

        Demand control instructions (DCI)  # noqa: E501
        """
        pass

    def test_datasets_dci_stream_get(self):
        """Test case for datasets_dci_stream_get

        Demand control instructions (DCI) stream  # noqa: E501
        """
        pass

    def test_datasets_dgws_get(self):
        """Test case for datasets_dgws_get

        Day-Ahead Generation For Wind And Solar (DGWS / B1440)  # noqa: E501
        """
        pass

    def test_datasets_dgws_stream_get(self):
        """Test case for datasets_dgws_stream_get

        Day-Ahead Generation For Wind And Solar (DGWS / B1440) stream  # noqa: E501
        """
        pass

    def test_datasets_disbsad_get(self):
        """Test case for datasets_disbsad_get

        Disaggregated Balancing Services Adjustment Data (DISBSAD)  # noqa: E501
        """
        pass

    def test_datasets_disbsad_stream_get(self):
        """Test case for datasets_disbsad_stream_get

        Disaggregated Balancing Services Adjustment Data (DISBSAD) stream  # noqa: E501
        """
        pass

    def test_datasets_feib_get(self):
        """Test case for datasets_feib_get

        Financial Expenses and Income for Balancing (FEIB / B1790)  # noqa: E501
        """
        pass

    def test_datasets_feib_stream_get(self):
        """Test case for datasets_feib_stream_get

        Financial Expenses and Income for Balancing (FEIB / B1790) stream  # noqa: E501
        """
        pass

    def test_datasets_fou2_t14_d_get(self):
        """Test case for datasets_fou2_t14_d_get

        2 to 14 days ahead generation availability aggregated by fuel type (FOU2T14D)  # noqa: E501
        """
        pass

    def test_datasets_fou2_t3_yw_get(self):
        """Test case for datasets_fou2_t3_yw_get

        2 to 156 weeks ahead generation availability aggregated by fuel type (FOU2T3YW)  # noqa: E501
        """
        pass

    def test_datasets_freq_get(self):
        """Test case for datasets_freq_get

        System frequency (FREQ)  # noqa: E501
        """
        pass

    def test_datasets_freq_stream_get(self):
        """Test case for datasets_freq_stream_get

        System frequency (FREQ) stream  # noqa: E501
        """
        pass

    def test_datasets_fuelhh_get(self):
        """Test case for datasets_fuelhh_get

        Half-hourly generation outturn by fuel type (FUELHH)  # noqa: E501
        """
        pass

    def test_datasets_fuelhh_stream_get(self):
        """Test case for datasets_fuelhh_stream_get

        Half-hourly generation outturn by fuel type (FUELHH) stream  # noqa: E501
        """
        pass

    def test_datasets_fuelinst_get(self):
        """Test case for datasets_fuelinst_get

        Instantaneous generation outturn by fuel type (FUELINST)  # noqa: E501
        """
        pass

    def test_datasets_fuelinst_stream_get(self):
        """Test case for datasets_fuelinst_stream_get

        Instantaneous generation outturn by fuel type (FUELINST) stream  # noqa: E501
        """
        pass

    def test_datasets_igca_get(self):
        """Test case for datasets_igca_get

        Installed Generation Capacity Aggregated (IGCA / B1410)  # noqa: E501
        """
        pass

    def test_datasets_igca_stream_get(self):
        """Test case for datasets_igca_stream_get

        Installed Generation Capacity Aggregated (IGCA / B1410) stream  # noqa: E501
        """
        pass

    def test_datasets_igcpu_get(self):
        """Test case for datasets_igcpu_get

        Installed Generation Capacity per Unit (IGCPU / B1420)  # noqa: E501
        """
        pass

    def test_datasets_igcpu_stream_get(self):
        """Test case for datasets_igcpu_stream_get

        Installed Generation Capacity per Unit (IGCPU / B1420) stream  # noqa: E501
        """
        pass

    def test_datasets_imbalngc_get(self):
        """Test case for datasets_imbalngc_get

        Day and day-ahead indicated imbalance (IMBALNGC)  # noqa: E501
        """
        pass

    def test_datasets_imbalngc_stream_get(self):
        """Test case for datasets_imbalngc_stream_get

        Day and day-ahead indicated imbalance (IMBALNGC) stream  # noqa: E501
        """
        pass

    def test_datasets_inddem_get(self):
        """Test case for datasets_inddem_get

        Day and day-ahead indicated demand (INDDEM)  # noqa: E501
        """
        pass

    def test_datasets_inddem_stream_get(self):
        """Test case for datasets_inddem_stream_get

        Day and day-ahead indicated demand (INDDEM) stream  # noqa: E501
        """
        pass

    def test_datasets_indgen_get(self):
        """Test case for datasets_indgen_get

        Day and day-ahead indicated generation (INDGEN)  # noqa: E501
        """
        pass

    def test_datasets_indgen_stream_get(self):
        """Test case for datasets_indgen_stream_get

        Day and day-ahead indicated generation (INDGEN) stream  # noqa: E501
        """
        pass

    def test_datasets_indo_get(self):
        """Test case for datasets_indo_get

        Initial National Demand outturn (INDO)  # noqa: E501
        """
        pass

    def test_datasets_indod_get(self):
        """Test case for datasets_indod_get

        Initial National Demand outturn daily (INDOD)  # noqa: E501
        """
        pass

    def test_datasets_indod_stream_get(self):
        """Test case for datasets_indod_stream_get

        Initial National Demand outturn daily (INDOD) stream  # noqa: E501
        """
        pass

    def test_datasets_itsdo_get(self):
        """Test case for datasets_itsdo_get

        Initial Transmission System Demand outturn (ITSDO)  # noqa: E501
        """
        pass

    def test_datasets_lolpdrm_get(self):
        """Test case for datasets_lolpdrm_get

        Loss of load probability and de-rated margin (LOLPDRM)  # noqa: E501
        """
        pass

    def test_datasets_lolpdrm_stream_get(self):
        """Test case for datasets_lolpdrm_stream_get

        Loss of load probability and de-rated margin (LOLPDRM)  # noqa: E501
        """
        pass

    def test_datasets_matl_get(self):
        """Test case for datasets_matl_get

        Month-Ahead Total Load Forecast Per Bidding Zone (MATL / B0640)  # noqa: E501
        """
        pass

    def test_datasets_matl_stream_get(self):
        """Test case for datasets_matl_stream_get

        Month-Ahead Total Load Forecast Per Bidding Zone (MATL / B0640) stream  # noqa: E501
        """
        pass

    def test_datasets_mdp_get(self):
        """Test case for datasets_mdp_get

        Maximum Delivery Period (MDP)  # noqa: E501
        """
        pass

    def test_datasets_mdp_stream_get(self):
        """Test case for datasets_mdp_stream_get

        Maximum Delivery Period (MDP) stream  # noqa: E501
        """
        pass

    def test_datasets_mdv_get(self):
        """Test case for datasets_mdv_get

        Maximum Delivery Volume (MDV)  # noqa: E501
        """
        pass

    def test_datasets_mdv_stream_get(self):
        """Test case for datasets_mdv_stream_get

        Maximum Delivery Volume (MDV) stream  # noqa: E501
        """
        pass

    def test_datasets_melngc_get(self):
        """Test case for datasets_melngc_get

        Day and day-ahead indicated margin (MELNGC)  # noqa: E501
        """
        pass

    def test_datasets_melngc_stream_get(self):
        """Test case for datasets_melngc_stream_get

        Day and day-ahead indicated margin (MELNGC) stream  # noqa: E501
        """
        pass

    def test_datasets_mels_get(self):
        """Test case for datasets_mels_get

        Maximum Export Limit (MELS)  # noqa: E501
        """
        pass

    def test_datasets_mels_stream_get(self):
        """Test case for datasets_mels_stream_get

        Maximum Export Limit (MELS) stream  # noqa: E501
        """
        pass

    def test_datasets_metadata_latest_get(self):
        """Test case for datasets_metadata_latest_get

        Returns the time when each dataset was last updated  # noqa: E501
        """
        pass

    def test_datasets_mid_get(self):
        """Test case for datasets_mid_get

        Market Index Data (MID)  # noqa: E501
        """
        pass

    def test_datasets_mid_stream_get(self):
        """Test case for datasets_mid_stream_get

        Market Index Data (MID) stream  # noqa: E501
        """
        pass

    def test_datasets_mils_get(self):
        """Test case for datasets_mils_get

        Maximum Import Limit (MILS)  # noqa: E501
        """
        pass

    def test_datasets_mils_stream_get(self):
        """Test case for datasets_mils_stream_get

        Maximum Import Limit (MILS) stream  # noqa: E501
        """
        pass

    def test_datasets_mnzt_get(self):
        """Test case for datasets_mnzt_get

        Minimum Non-Zero Time (MNZT)  # noqa: E501
        """
        pass

    def test_datasets_mnzt_stream_get(self):
        """Test case for datasets_mnzt_stream_get

        Minimum Non-Zero Time (MNZT) stream  # noqa: E501
        """
        pass

    def test_datasets_mzt_get(self):
        """Test case for datasets_mzt_get

        Minimum Zero Time (MZT)  # noqa: E501
        """
        pass

    def test_datasets_mzt_stream_get(self):
        """Test case for datasets_mzt_stream_get

        Minimum Zero Time (MZT) stream  # noqa: E501
        """
        pass

    def test_datasets_ndf_get(self):
        """Test case for datasets_ndf_get

        Day and day-ahead National Demand forecast (NDF)  # noqa: E501
        """
        pass

    def test_datasets_ndf_stream_get(self):
        """Test case for datasets_ndf_stream_get

        Day and day-ahead National Demand forecast (NDF) stream  # noqa: E501
        """
        pass

    def test_datasets_ndfd_get(self):
        """Test case for datasets_ndfd_get

        2-14 days ahead National Demand and surplus forecast (NDFD)  # noqa: E501
        """
        pass

    def test_datasets_ndfd_stream_get(self):
        """Test case for datasets_ndfd_stream_get

        2-14 days ahead National Demand and surplus forecast (NDFD) stream  # noqa: E501
        """
        pass

    def test_datasets_ndfw_get(self):
        """Test case for datasets_ndfw_get

        2-52 weeks ahead National Demand and surplus forecast (NDFW)  # noqa: E501
        """
        pass

    def test_datasets_ndfw_stream_get(self):
        """Test case for datasets_ndfw_stream_get

        2-52 weeks ahead National Demand and surplus forecast (NDFW) stream  # noqa: E501
        """
        pass

    def test_datasets_ndz_get(self):
        """Test case for datasets_ndz_get

        Notice to Deviate from Zero (NDZ)  # noqa: E501
        """
        pass

    def test_datasets_ndz_stream_get(self):
        """Test case for datasets_ndz_stream_get

        Notice to Deviate from Zero (NDZ) stream  # noqa: E501
        """
        pass

    def test_datasets_netbsad_get(self):
        """Test case for datasets_netbsad_get

        Net Balancing Services Adjustment Data (NETBSAD)  # noqa: E501
        """
        pass

    def test_datasets_netbsad_stream_get(self):
        """Test case for datasets_netbsad_stream_get

        Net Balancing Services Adjustment Data (NETBSAD)  # noqa: E501
        """
        pass

    def test_datasets_nonbm_get(self):
        """Test case for datasets_nonbm_get

        Non-BM STOR (NONBM)  # noqa: E501
        """
        pass

    def test_datasets_nonbm_stream_get(self):
        """Test case for datasets_nonbm_stream_get

        Non-BM STOR (NONBM) stream  # noqa: E501
        """
        pass

    def test_datasets_nou2_t14_d_get(self):
        """Test case for datasets_nou2_t14_d_get

        2 to 14 days ahead generation availability aggregated data (NOU2T14D)  # noqa: E501
        """
        pass

    def test_datasets_nou2_t3_yw_get(self):
        """Test case for datasets_nou2_t3_yw_get

        2 to 156 weeks ahead generation availability aggregated data (NOU2T3YW)  # noqa: E501
        """
        pass

    def test_datasets_ntb_get(self):
        """Test case for datasets_ntb_get

        Notice to Deliver Bids (NTB)  # noqa: E501
        """
        pass

    def test_datasets_ntb_stream_get(self):
        """Test case for datasets_ntb_stream_get

        Notice to Deliver Bids (NTB) stream  # noqa: E501
        """
        pass

    def test_datasets_nto_get(self):
        """Test case for datasets_nto_get

        Notice to Deliver Offers (NTO)  # noqa: E501
        """
        pass

    def test_datasets_nto_stream_get(self):
        """Test case for datasets_nto_stream_get

        Notice to Deliver Offers (NTO) stream  # noqa: E501
        """
        pass

    def test_datasets_ocnmf3_y2_get(self):
        """Test case for datasets_ocnmf3_y2_get

        2-156 weeks ahead demand margin forecast (OCNMF3Y2)  # noqa: E501
        """
        pass

    def test_datasets_ocnmf3_y2_stream_get(self):
        """Test case for datasets_ocnmf3_y2_stream_get

        2-156 weeks ahead demand margin forecast (OCNMF3Y2) stream  # noqa: E501
        """
        pass

    def test_datasets_ocnmf3_y_get(self):
        """Test case for datasets_ocnmf3_y_get

        2-156 weeks ahead demand surplus forecast (OCNMF3Y)  # noqa: E501
        """
        pass

    def test_datasets_ocnmf3_y_stream_get(self):
        """Test case for datasets_ocnmf3_y_stream_get

        2-156 weeks ahead demand surplus forecast (OCNMF3Y) stream  # noqa: E501
        """
        pass

    def test_datasets_ocnmfd2_get(self):
        """Test case for datasets_ocnmfd2_get

        2-14 days ahead demand margin forecast (OCNMFD2)  # noqa: E501
        """
        pass

    def test_datasets_ocnmfd2_stream_get(self):
        """Test case for datasets_ocnmfd2_stream_get

        2-14 days ahead demand margin forecast (OCNMFD2) stream  # noqa: E501
        """
        pass

    def test_datasets_ocnmfd_get(self):
        """Test case for datasets_ocnmfd_get

        2-14 days ahead demand surplus forecast (OCNMFD)  # noqa: E501
        """
        pass

    def test_datasets_ocnmfd_stream_get(self):
        """Test case for datasets_ocnmfd_stream_get

        2-14 days ahead demand surplus forecast (OCNMFD) stream  # noqa: E501
        """
        pass

    def test_datasets_pbc_get(self):
        """Test case for datasets_pbc_get

        Procured Balancing Capacity (PBC)  # noqa: E501
        """
        pass

    def test_datasets_pbc_stream_get(self):
        """Test case for datasets_pbc_stream_get

        Procured Balancing Capacity (PBC) stream  # noqa: E501
        """
        pass

    def test_datasets_pn_get(self):
        """Test case for datasets_pn_get

        Physical Notifications (PN)  # noqa: E501
        """
        pass

    def test_datasets_pn_stream_get(self):
        """Test case for datasets_pn_stream_get

        Physical Notifications (PN) stream  # noqa: E501
        """
        pass

    def test_datasets_ppbr_get(self):
        """Test case for datasets_ppbr_get

        Prices Of Procured Balancing Reserves (PPBR / B1730)  # noqa: E501
        """
        pass

    def test_datasets_ppbr_stream_get(self):
        """Test case for datasets_ppbr_stream_get

        Prices Of Procured Balancing Reserves (PPBR / B1730) stream  # noqa: E501
        """
        pass

    def test_datasets_qas_get(self):
        """Test case for datasets_qas_get

        Balancing Services Volume (QAS)  # noqa: E501
        """
        pass

    def test_datasets_qas_stream_get(self):
        """Test case for datasets_qas_stream_get

        Balancing Services Volume (QAS) stream  # noqa: E501
        """
        pass

    def test_datasets_qpn_get(self):
        """Test case for datasets_qpn_get

        Quiescent Physical Notifications (QPN)  # noqa: E501
        """
        pass

    def test_datasets_qpn_stream_get(self):
        """Test case for datasets_qpn_stream_get

        Quiescent Physical Notifications (QPN) stream  # noqa: E501
        """
        pass

    def test_datasets_rdre_get(self):
        """Test case for datasets_rdre_get

        Run Down Rate Export (RDRE)  # noqa: E501
        """
        pass

    def test_datasets_rdre_stream_get(self):
        """Test case for datasets_rdre_stream_get

        Run Down Rate Export (RDRE) stream  # noqa: E501
        """
        pass

    def test_datasets_rdri_get(self):
        """Test case for datasets_rdri_get

        Run Down Rate Import (RDRI)  # noqa: E501
        """
        pass

    def test_datasets_rdri_stream_get(self):
        """Test case for datasets_rdri_stream_get

        Run Down Rate Import (RDRI) stream  # noqa: E501
        """
        pass

    def test_datasets_remit_get(self):
        """Test case for datasets_remit_get

        The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT)  # noqa: E501
        """
        pass

    def test_datasets_remit_stream_get(self):
        """Test case for datasets_remit_stream_get

        The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT) stream  # noqa: E501
        """
        pass

    def test_datasets_rure_get(self):
        """Test case for datasets_rure_get

        Run Up Rate Export (RURE)  # noqa: E501
        """
        pass

    def test_datasets_rure_stream_get(self):
        """Test case for datasets_rure_stream_get

        Run Up Rate Export (RURE) stream  # noqa: E501
        """
        pass

    def test_datasets_ruri_get(self):
        """Test case for datasets_ruri_get

        Run Up Rate Import (RURI)  # noqa: E501
        """
        pass

    def test_datasets_ruri_stream_get(self):
        """Test case for datasets_ruri_stream_get

        Run Up Rate Import (RURI) stream  # noqa: E501
        """
        pass

    def test_datasets_sel_get(self):
        """Test case for datasets_sel_get

        Stable Export Limit (SEL)  # noqa: E501
        """
        pass

    def test_datasets_sel_stream_get(self):
        """Test case for datasets_sel_stream_get

        Stable Export Limit (SEL) stream  # noqa: E501
        """
        pass

    def test_datasets_sil_get(self):
        """Test case for datasets_sil_get

        Stable Import Limit (SIL)  # noqa: E501
        """
        pass

    def test_datasets_sil_stream_get(self):
        """Test case for datasets_sil_stream_get

        Stable Import Limit (SIL) stream  # noqa: E501
        """
        pass

    def test_datasets_soso_get(self):
        """Test case for datasets_soso_get

        SO-SO prices (SOSO)  # noqa: E501
        """
        pass

    def test_datasets_soso_stream_get(self):
        """Test case for datasets_soso_stream_get

        SO-SO prices (SOSO) stream  # noqa: E501
        """
        pass

    def test_datasets_syswarn_get(self):
        """Test case for datasets_syswarn_get

        System warnings (SYSWARN)  # noqa: E501
        """
        pass

    def test_datasets_syswarn_stream_get(self):
        """Test case for datasets_syswarn_stream_get

        System warnings (SYSWARN) stream  # noqa: E501
        """
        pass

    def test_datasets_temp_get(self):
        """Test case for datasets_temp_get

        Temperature data (TEMP)  # noqa: E501
        """
        pass

    def test_datasets_tsdf_get(self):
        """Test case for datasets_tsdf_get

        Day and day-ahead Transmission System Demand forecast (TSDF)  # noqa: E501
        """
        pass

    def test_datasets_tsdf_stream_get(self):
        """Test case for datasets_tsdf_stream_get

        Day and day-ahead Transmission System Demand forecast (TSDF) stream  # noqa: E501
        """
        pass

    def test_datasets_tsdfd_get(self):
        """Test case for datasets_tsdfd_get

        2-14 days ahead Transmission System Demand and surplus forecast (TSDFD)  # noqa: E501
        """
        pass

    def test_datasets_tsdfd_stream_get(self):
        """Test case for datasets_tsdfd_stream_get

        2-14 days ahead Transmission System Demand and surplus forecast (TSDFD) stream  # noqa: E501
        """
        pass

    def test_datasets_tsdfw_get(self):
        """Test case for datasets_tsdfw_get

        2-52 weeks ahead Transmission System Demand and surplus forecast (TSDFW)  # noqa: E501
        """
        pass

    def test_datasets_tsdfw_stream_get(self):
        """Test case for datasets_tsdfw_stream_get

        2-52 weeks ahead Transmission System Demand and surplus forecast (TSDFW) stream  # noqa: E501
        """
        pass

    def test_datasets_tudm_get(self):
        """Test case for datasets_tudm_get

        Trading unit data (S0491_TUDM)  # noqa: E501
        """
        pass

    def test_datasets_tudm_stream_get(self):
        """Test case for datasets_tudm_stream_get

        Trading unit data (S0491_TUDM) stream  # noqa: E501
        """
        pass

    def test_datasets_uou2_t14_d_get(self):
        """Test case for datasets_uou2_t14_d_get

        2 to 14 days ahead generation availability aggregated by Balancing Mechanism Units (UOU2T14D)  # noqa: E501
        """
        pass

    def test_datasets_uou2_t14_d_stream_get(self):
        """Test case for datasets_uou2_t14_d_stream_get

        2 to 14 days ahead generation availability aggregated by Balancing Mechanism Units (UOU2T14D) stream  # noqa: E501
        """
        pass

    def test_datasets_uou2_t3_yw_get(self):
        """Test case for datasets_uou2_t3_yw_get

        2 to 156 weeks ahead generation availability aggregated by Balancing Mechanism Units (UOU2T3YW)  # noqa: E501
        """
        pass

    def test_datasets_uou2_t3_yw_stream_get(self):
        """Test case for datasets_uou2_t3_yw_stream_get

        2 to 156 weeks ahead generation availability aggregated by Balancing Mechanism Units (UOU2T3YW) stream  # noqa: E501
        """
        pass

    def test_datasets_watl_get(self):
        """Test case for datasets_watl_get

        Week-Ahead Total Load Forecast Per Bidding Zone (WATL / B0630)  # noqa: E501
        """
        pass

    def test_datasets_watl_stream_get(self):
        """Test case for datasets_watl_stream_get

        Week-Ahead Total Load Forecast Per Bidding Zone (WATL / B0630) stream  # noqa: E501
        """
        pass

    def test_datasets_windfor_get(self):
        """Test case for datasets_windfor_get

        Wind generation forecast (WINDFOR)  # noqa: E501
        """
        pass

    def test_datasets_windfor_stream_get(self):
        """Test case for datasets_windfor_stream_get

        Wind generation forecast (WINDFOR) stream  # noqa: E501
        """
        pass

    def test_datasets_yafm_get(self):
        """Test case for datasets_yafm_get

        Year Ahead Forecast Margin (YAFM / B0810)  # noqa: E501
        """
        pass

    def test_datasets_yafm_stream_get(self):
        """Test case for datasets_yafm_stream_get

        Year Ahead Forecast Margin (YAFM / B0810) stream  # noqa: E501
        """
        pass

    def test_datasets_yatl_get(self):
        """Test case for datasets_yatl_get

        Year-Ahead Total Load Forecast Per Bidding Zone (YATL / B0650)  # noqa: E501
        """
        pass

    def test_datasets_yatl_stream_get(self):
        """Test case for datasets_yatl_stream_get

        Year-Ahead Total Load Forecast Per Bidding Zone (YATL / B0650) stream  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
