# coding: utf-8

"""
    Insights.Api

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'settlement_date': 'date',
        'settlement_period': 'int',
        'indicated_imbalance': 'int',
        'offer_volume': 'float',
        'bid_volume': 'float',
        'total_accepted_offer_volume': 'float',
        'total_accepted_bid_volume': 'float',
        'priced_accepted_offers_volume': 'float',
        'priced_accepted_bids_volume': 'float'
    }

    attribute_map = {
        'settlement_date': 'settlementDate',
        'settlement_period': 'settlementPeriod',
        'indicated_imbalance': 'indicatedImbalance',
        'offer_volume': 'offerVolume',
        'bid_volume': 'bidVolume',
        'total_accepted_offer_volume': 'totalAcceptedOfferVolume',
        'total_accepted_bid_volume': 'totalAcceptedBidVolume',
        'priced_accepted_offers_volume': 'pricedAcceptedOffersVolume',
        'priced_accepted_bids_volume': 'pricedAcceptedBidsVolume'
    }

    def __init__(self, settlement_date=None, settlement_period=None, indicated_imbalance=None, offer_volume=None, bid_volume=None, total_accepted_offer_volume=None, total_accepted_bid_volume=None, priced_accepted_offers_volume=None, priced_accepted_bids_volume=None):  # noqa: E501
        """InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse - a model defined in Swagger"""  # noqa: E501
        self._settlement_date = None
        self._settlement_period = None
        self._indicated_imbalance = None
        self._offer_volume = None
        self._bid_volume = None
        self._total_accepted_offer_volume = None
        self._total_accepted_bid_volume = None
        self._priced_accepted_offers_volume = None
        self._priced_accepted_bids_volume = None
        self.discriminator = None
        if settlement_date is not None:
            self.settlement_date = settlement_date
        if settlement_period is not None:
            self.settlement_period = settlement_period
        if indicated_imbalance is not None:
            self.indicated_imbalance = indicated_imbalance
        if offer_volume is not None:
            self.offer_volume = offer_volume
        if bid_volume is not None:
            self.bid_volume = bid_volume
        if total_accepted_offer_volume is not None:
            self.total_accepted_offer_volume = total_accepted_offer_volume
        if total_accepted_bid_volume is not None:
            self.total_accepted_bid_volume = total_accepted_bid_volume
        if priced_accepted_offers_volume is not None:
            self.priced_accepted_offers_volume = priced_accepted_offers_volume
        if priced_accepted_bids_volume is not None:
            self.priced_accepted_bids_volume = priced_accepted_bids_volume

    @property
    def settlement_date(self):
        """Gets the settlement_date of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.  # noqa: E501


        :return: The settlement_date of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.  # noqa: E501
        :rtype: date
        """
        return self._settlement_date

    @settlement_date.setter
    def settlement_date(self, settlement_date):
        """Sets the settlement_date of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.


        :param settlement_date: The settlement_date of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.  # noqa: E501
        :type: date
        """

        self._settlement_date = settlement_date

    @property
    def settlement_period(self):
        """Gets the settlement_period of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.  # noqa: E501


        :return: The settlement_period of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.  # noqa: E501
        :rtype: int
        """
        return self._settlement_period

    @settlement_period.setter
    def settlement_period(self, settlement_period):
        """Sets the settlement_period of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.


        :param settlement_period: The settlement_period of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.  # noqa: E501
        :type: int
        """

        self._settlement_period = settlement_period

    @property
    def indicated_imbalance(self):
        """Gets the indicated_imbalance of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.  # noqa: E501


        :return: The indicated_imbalance of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.  # noqa: E501
        :rtype: int
        """
        return self._indicated_imbalance

    @indicated_imbalance.setter
    def indicated_imbalance(self, indicated_imbalance):
        """Sets the indicated_imbalance of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.


        :param indicated_imbalance: The indicated_imbalance of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.  # noqa: E501
        :type: int
        """

        self._indicated_imbalance = indicated_imbalance

    @property
    def offer_volume(self):
        """Gets the offer_volume of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.  # noqa: E501


        :return: The offer_volume of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.  # noqa: E501
        :rtype: float
        """
        return self._offer_volume

    @offer_volume.setter
    def offer_volume(self, offer_volume):
        """Sets the offer_volume of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.


        :param offer_volume: The offer_volume of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.  # noqa: E501
        :type: float
        """

        self._offer_volume = offer_volume

    @property
    def bid_volume(self):
        """Gets the bid_volume of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.  # noqa: E501


        :return: The bid_volume of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.  # noqa: E501
        :rtype: float
        """
        return self._bid_volume

    @bid_volume.setter
    def bid_volume(self, bid_volume):
        """Sets the bid_volume of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.


        :param bid_volume: The bid_volume of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.  # noqa: E501
        :type: float
        """

        self._bid_volume = bid_volume

    @property
    def total_accepted_offer_volume(self):
        """Gets the total_accepted_offer_volume of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.  # noqa: E501


        :return: The total_accepted_offer_volume of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.  # noqa: E501
        :rtype: float
        """
        return self._total_accepted_offer_volume

    @total_accepted_offer_volume.setter
    def total_accepted_offer_volume(self, total_accepted_offer_volume):
        """Sets the total_accepted_offer_volume of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.


        :param total_accepted_offer_volume: The total_accepted_offer_volume of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.  # noqa: E501
        :type: float
        """

        self._total_accepted_offer_volume = total_accepted_offer_volume

    @property
    def total_accepted_bid_volume(self):
        """Gets the total_accepted_bid_volume of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.  # noqa: E501


        :return: The total_accepted_bid_volume of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.  # noqa: E501
        :rtype: float
        """
        return self._total_accepted_bid_volume

    @total_accepted_bid_volume.setter
    def total_accepted_bid_volume(self, total_accepted_bid_volume):
        """Sets the total_accepted_bid_volume of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.


        :param total_accepted_bid_volume: The total_accepted_bid_volume of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.  # noqa: E501
        :type: float
        """

        self._total_accepted_bid_volume = total_accepted_bid_volume

    @property
    def priced_accepted_offers_volume(self):
        """Gets the priced_accepted_offers_volume of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.  # noqa: E501


        :return: The priced_accepted_offers_volume of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.  # noqa: E501
        :rtype: float
        """
        return self._priced_accepted_offers_volume

    @priced_accepted_offers_volume.setter
    def priced_accepted_offers_volume(self, priced_accepted_offers_volume):
        """Sets the priced_accepted_offers_volume of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.


        :param priced_accepted_offers_volume: The priced_accepted_offers_volume of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.  # noqa: E501
        :type: float
        """

        self._priced_accepted_offers_volume = priced_accepted_offers_volume

    @property
    def priced_accepted_bids_volume(self):
        """Gets the priced_accepted_bids_volume of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.  # noqa: E501


        :return: The priced_accepted_bids_volume of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.  # noqa: E501
        :rtype: float
        """
        return self._priced_accepted_bids_volume

    @priced_accepted_bids_volume.setter
    def priced_accepted_bids_volume(self, priced_accepted_bids_volume):
        """Sets the priced_accepted_bids_volume of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.


        :param priced_accepted_bids_volume: The priced_accepted_bids_volume of this InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse.  # noqa: E501
        :type: float
        """

        self._priced_accepted_bids_volume = priced_accepted_bids_volume

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list([x.to_dict() if hasattr(x, "to_dict") else x for x in value])
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict([(item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item for item in list(value.items())])
            else:
                result[attr] = value
        if issubclass(InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse, dict):
            for key, value in list(self.items()):
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InsightsApiModelsResponsesBalancingSettlementMarketDepthResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
