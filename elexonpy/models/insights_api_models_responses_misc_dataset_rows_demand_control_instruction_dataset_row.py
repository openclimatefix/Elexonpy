# coding: utf-8

"""
    Insights API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'dataset': 'str',
        'm_rid': 'str',
        'revision_number': 'int',
        'publish_time': 'datetime',
        'publishing_period_commencing_time': 'datetime',
        'affected_dso': 'str',
        'demand_control_id': 'str',
        'instruction_sequence': 'int',
        'demand_control_event_flag': 'str',
        'time_from': 'datetime',
        'time_to': 'datetime',
        'volume': 'float',
        'system_management_action_flag': 'str',
        'amendment_flag': 'str'
    }

    attribute_map = {
        'dataset': 'dataset',
        'm_rid': 'mRID',
        'revision_number': 'revisionNumber',
        'publish_time': 'publishTime',
        'publishing_period_commencing_time': 'publishingPeriodCommencingTime',
        'affected_dso': 'affectedDso',
        'demand_control_id': 'demandControlId',
        'instruction_sequence': 'instructionSequence',
        'demand_control_event_flag': 'demandControlEventFlag',
        'time_from': 'timeFrom',
        'time_to': 'timeTo',
        'volume': 'volume',
        'system_management_action_flag': 'systemManagementActionFlag',
        'amendment_flag': 'amendmentFlag'
    }

    def __init__(self, dataset=None, m_rid=None, revision_number=None, publish_time=None, publishing_period_commencing_time=None, affected_dso=None, demand_control_id=None, instruction_sequence=None, demand_control_event_flag=None, time_from=None, time_to=None, volume=None, system_management_action_flag=None, amendment_flag=None):  # noqa: E501
        """InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow - a model defined in Swagger"""  # noqa: E501
        self._dataset = None
        self._m_rid = None
        self._revision_number = None
        self._publish_time = None
        self._publishing_period_commencing_time = None
        self._affected_dso = None
        self._demand_control_id = None
        self._instruction_sequence = None
        self._demand_control_event_flag = None
        self._time_from = None
        self._time_to = None
        self._volume = None
        self._system_management_action_flag = None
        self._amendment_flag = None
        self.discriminator = None
        if dataset is not None:
            self.dataset = dataset
        if m_rid is not None:
            self.m_rid = m_rid
        if revision_number is not None:
            self.revision_number = revision_number
        if publish_time is not None:
            self.publish_time = publish_time
        if publishing_period_commencing_time is not None:
            self.publishing_period_commencing_time = publishing_period_commencing_time
        if affected_dso is not None:
            self.affected_dso = affected_dso
        if demand_control_id is not None:
            self.demand_control_id = demand_control_id
        if instruction_sequence is not None:
            self.instruction_sequence = instruction_sequence
        if demand_control_event_flag is not None:
            self.demand_control_event_flag = demand_control_event_flag
        if time_from is not None:
            self.time_from = time_from
        if time_to is not None:
            self.time_to = time_to
        if volume is not None:
            self.volume = volume
        if system_management_action_flag is not None:
            self.system_management_action_flag = system_management_action_flag
        if amendment_flag is not None:
            self.amendment_flag = amendment_flag

    @property
    def dataset(self):
        """Gets the dataset of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501


        :return: The dataset of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501
        :rtype: str
        """
        return self._dataset

    @dataset.setter
    def dataset(self, dataset):
        """Sets the dataset of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.


        :param dataset: The dataset of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501
        :type: str
        """

        self._dataset = dataset

    @property
    def m_rid(self):
        """Gets the m_rid of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501


        :return: The m_rid of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501
        :rtype: str
        """
        return self._m_rid

    @m_rid.setter
    def m_rid(self, m_rid):
        """Sets the m_rid of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.


        :param m_rid: The m_rid of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501
        :type: str
        """

        self._m_rid = m_rid

    @property
    def revision_number(self):
        """Gets the revision_number of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501


        :return: The revision_number of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501
        :rtype: int
        """
        return self._revision_number

    @revision_number.setter
    def revision_number(self, revision_number):
        """Sets the revision_number of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.


        :param revision_number: The revision_number of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501
        :type: int
        """

        self._revision_number = revision_number

    @property
    def publish_time(self):
        """Gets the publish_time of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501


        :return: The publish_time of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501
        :rtype: datetime
        """
        return self._publish_time

    @publish_time.setter
    def publish_time(self, publish_time):
        """Sets the publish_time of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.


        :param publish_time: The publish_time of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501
        :type: datetime
        """

        self._publish_time = publish_time

    @property
    def publishing_period_commencing_time(self):
        """Gets the publishing_period_commencing_time of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501


        :return: The publishing_period_commencing_time of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501
        :rtype: datetime
        """
        return self._publishing_period_commencing_time

    @publishing_period_commencing_time.setter
    def publishing_period_commencing_time(self, publishing_period_commencing_time):
        """Sets the publishing_period_commencing_time of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.


        :param publishing_period_commencing_time: The publishing_period_commencing_time of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501
        :type: datetime
        """

        self._publishing_period_commencing_time = publishing_period_commencing_time

    @property
    def affected_dso(self):
        """Gets the affected_dso of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501


        :return: The affected_dso of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501
        :rtype: str
        """
        return self._affected_dso

    @affected_dso.setter
    def affected_dso(self, affected_dso):
        """Sets the affected_dso of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.


        :param affected_dso: The affected_dso of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501
        :type: str
        """

        self._affected_dso = affected_dso

    @property
    def demand_control_id(self):
        """Gets the demand_control_id of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501


        :return: The demand_control_id of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501
        :rtype: str
        """
        return self._demand_control_id

    @demand_control_id.setter
    def demand_control_id(self, demand_control_id):
        """Sets the demand_control_id of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.


        :param demand_control_id: The demand_control_id of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501
        :type: str
        """

        self._demand_control_id = demand_control_id

    @property
    def instruction_sequence(self):
        """Gets the instruction_sequence of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501


        :return: The instruction_sequence of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501
        :rtype: int
        """
        return self._instruction_sequence

    @instruction_sequence.setter
    def instruction_sequence(self, instruction_sequence):
        """Sets the instruction_sequence of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.


        :param instruction_sequence: The instruction_sequence of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501
        :type: int
        """

        self._instruction_sequence = instruction_sequence

    @property
    def demand_control_event_flag(self):
        """Gets the demand_control_event_flag of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501


        :return: The demand_control_event_flag of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501
        :rtype: str
        """
        return self._demand_control_event_flag

    @demand_control_event_flag.setter
    def demand_control_event_flag(self, demand_control_event_flag):
        """Sets the demand_control_event_flag of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.


        :param demand_control_event_flag: The demand_control_event_flag of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501
        :type: str
        """

        self._demand_control_event_flag = demand_control_event_flag

    @property
    def time_from(self):
        """Gets the time_from of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501


        :return: The time_from of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501
        :rtype: datetime
        """
        return self._time_from

    @time_from.setter
    def time_from(self, time_from):
        """Sets the time_from of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.


        :param time_from: The time_from of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501
        :type: datetime
        """

        self._time_from = time_from

    @property
    def time_to(self):
        """Gets the time_to of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501


        :return: The time_to of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501
        :rtype: datetime
        """
        return self._time_to

    @time_to.setter
    def time_to(self, time_to):
        """Sets the time_to of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.


        :param time_to: The time_to of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501
        :type: datetime
        """

        self._time_to = time_to

    @property
    def volume(self):
        """Gets the volume of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501


        :return: The volume of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501
        :rtype: float
        """
        return self._volume

    @volume.setter
    def volume(self, volume):
        """Sets the volume of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.


        :param volume: The volume of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501
        :type: float
        """

        self._volume = volume

    @property
    def system_management_action_flag(self):
        """Gets the system_management_action_flag of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501


        :return: The system_management_action_flag of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501
        :rtype: str
        """
        return self._system_management_action_flag

    @system_management_action_flag.setter
    def system_management_action_flag(self, system_management_action_flag):
        """Sets the system_management_action_flag of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.


        :param system_management_action_flag: The system_management_action_flag of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501
        :type: str
        """

        self._system_management_action_flag = system_management_action_flag

    @property
    def amendment_flag(self):
        """Gets the amendment_flag of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501


        :return: The amendment_flag of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501
        :rtype: str
        """
        return self._amendment_flag

    @amendment_flag.setter
    def amendment_flag(self, amendment_flag):
        """Sets the amendment_flag of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.


        :param amendment_flag: The amendment_flag of this InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow.  # noqa: E501
        :type: str
        """

        self._amendment_flag = amendment_flag

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list([x.to_dict() if hasattr(x, "to_dict") else x for x in value])
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict([(item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item for item in list(value.items())])
            else:
                result[attr] = value
        if issubclass(InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow, dict):
            for key, value in list(self.items()):
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
