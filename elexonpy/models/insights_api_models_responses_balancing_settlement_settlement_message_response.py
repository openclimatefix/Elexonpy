# coding: utf-8

"""
    Insights.Api

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'settlement_date': 'date',
        'settlement_period': 'int',
        'start_time': 'datetime',
        'message_received_date_time': 'datetime',
        'message_severity': 'str',
        'message_type_code': 'str',
        'message_type': 'str',
        'message_text': 'str'
    }

    attribute_map = {
        'settlement_date': 'settlementDate',
        'settlement_period': 'settlementPeriod',
        'start_time': 'startTime',
        'message_received_date_time': 'messageReceivedDateTime',
        'message_severity': 'messageSeverity',
        'message_type_code': 'messageTypeCode',
        'message_type': 'messageType',
        'message_text': 'messageText'
    }

    def __init__(self, settlement_date=None, settlement_period=None, start_time=None, message_received_date_time=None, message_severity=None, message_type_code=None, message_type=None, message_text=None):  # noqa: E501
        """InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse - a model defined in Swagger"""  # noqa: E501
        self._settlement_date = None
        self._settlement_period = None
        self._start_time = None
        self._message_received_date_time = None
        self._message_severity = None
        self._message_type_code = None
        self._message_type = None
        self._message_text = None
        self.discriminator = None
        if settlement_date is not None:
            self.settlement_date = settlement_date
        if settlement_period is not None:
            self.settlement_period = settlement_period
        if start_time is not None:
            self.start_time = start_time
        if message_received_date_time is not None:
            self.message_received_date_time = message_received_date_time
        if message_severity is not None:
            self.message_severity = message_severity
        if message_type_code is not None:
            self.message_type_code = message_type_code
        if message_type is not None:
            self.message_type = message_type
        if message_text is not None:
            self.message_text = message_text

    @property
    def settlement_date(self):
        """Gets the settlement_date of this InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse.  # noqa: E501


        :return: The settlement_date of this InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse.  # noqa: E501
        :rtype: date
        """
        return self._settlement_date

    @settlement_date.setter
    def settlement_date(self, settlement_date):
        """Sets the settlement_date of this InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse.


        :param settlement_date: The settlement_date of this InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse.  # noqa: E501
        :type: date
        """

        self._settlement_date = settlement_date

    @property
    def settlement_period(self):
        """Gets the settlement_period of this InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse.  # noqa: E501


        :return: The settlement_period of this InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse.  # noqa: E501
        :rtype: int
        """
        return self._settlement_period

    @settlement_period.setter
    def settlement_period(self, settlement_period):
        """Sets the settlement_period of this InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse.


        :param settlement_period: The settlement_period of this InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse.  # noqa: E501
        :type: int
        """

        self._settlement_period = settlement_period

    @property
    def start_time(self):
        """Gets the start_time of this InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse.  # noqa: E501


        :return: The start_time of this InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse.


        :param start_time: The start_time of this InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse.  # noqa: E501
        :type: datetime
        """

        self._start_time = start_time

    @property
    def message_received_date_time(self):
        """Gets the message_received_date_time of this InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse.  # noqa: E501


        :return: The message_received_date_time of this InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._message_received_date_time

    @message_received_date_time.setter
    def message_received_date_time(self, message_received_date_time):
        """Sets the message_received_date_time of this InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse.


        :param message_received_date_time: The message_received_date_time of this InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse.  # noqa: E501
        :type: datetime
        """

        self._message_received_date_time = message_received_date_time

    @property
    def message_severity(self):
        """Gets the message_severity of this InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse.  # noqa: E501


        :return: The message_severity of this InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse.  # noqa: E501
        :rtype: str
        """
        return self._message_severity

    @message_severity.setter
    def message_severity(self, message_severity):
        """Sets the message_severity of this InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse.


        :param message_severity: The message_severity of this InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse.  # noqa: E501
        :type: str
        """

        self._message_severity = message_severity

    @property
    def message_type_code(self):
        """Gets the message_type_code of this InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse.  # noqa: E501


        :return: The message_type_code of this InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse.  # noqa: E501
        :rtype: str
        """
        return self._message_type_code

    @message_type_code.setter
    def message_type_code(self, message_type_code):
        """Sets the message_type_code of this InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse.


        :param message_type_code: The message_type_code of this InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse.  # noqa: E501
        :type: str
        """

        self._message_type_code = message_type_code

    @property
    def message_type(self):
        """Gets the message_type of this InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse.  # noqa: E501


        :return: The message_type of this InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse.  # noqa: E501
        :rtype: str
        """
        return self._message_type

    @message_type.setter
    def message_type(self, message_type):
        """Sets the message_type of this InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse.


        :param message_type: The message_type of this InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse.  # noqa: E501
        :type: str
        """

        self._message_type = message_type

    @property
    def message_text(self):
        """Gets the message_text of this InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse.  # noqa: E501


        :return: The message_text of this InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse.  # noqa: E501
        :rtype: str
        """
        return self._message_text

    @message_text.setter
    def message_text(self, message_text):
        """Sets the message_text of this InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse.


        :param message_text: The message_text of this InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse.  # noqa: E501
        :type: str
        """

        self._message_text = message_text

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list([x.to_dict() if hasattr(x, "to_dict") else x for x in value])
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict([(item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item for item in list(value.items())])
            else:
                result[attr] = value
        if issubclass(InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse, dict):
            for key, value in list(self.items()):
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InsightsApiModelsResponsesBalancingSettlementSettlementMessageResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
