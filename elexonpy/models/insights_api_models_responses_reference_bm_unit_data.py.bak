# coding: utf-8

"""
    Insights API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InsightsApiModelsResponsesReferenceBmUnitData(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'national_grid_bm_unit': 'str',
        'elexon_bm_unit': 'str',
        'eic': 'str',
        'fuel_type': 'str',
        'lead_party_name': 'str',
        'bm_unit_type': 'str',
        'fpn_flag': 'bool',
        'bm_unit_name': 'str',
        'lead_party_id': 'str',
        'demand_capacity': 'str',
        'generation_capacity': 'str',
        'production_or_consumption_flag': 'str',
        'transmission_loss_factor': 'str',
        'working_day_credit_assessment_import_capability': 'str',
        'non_working_day_credit_assessment_import_capability': 'str',
        'working_day_credit_assessment_export_capability': 'str',
        'non_working_day_credit_assessment_export_capability': 'str',
        'credit_qualifying_status': 'bool',
        'demand_in_production_flag': 'bool',
        'gsp_group_id': 'str',
        'gsp_group_name': 'str',
        'interconnector_id': 'str'
    }

    attribute_map = {
        'national_grid_bm_unit': 'nationalGridBmUnit',
        'elexon_bm_unit': 'elexonBmUnit',
        'eic': 'eic',
        'fuel_type': 'fuelType',
        'lead_party_name': 'leadPartyName',
        'bm_unit_type': 'bmUnitType',
        'fpn_flag': 'fpnFlag',
        'bm_unit_name': 'bmUnitName',
        'lead_party_id': 'leadPartyId',
        'demand_capacity': 'demandCapacity',
        'generation_capacity': 'generationCapacity',
        'production_or_consumption_flag': 'productionOrConsumptionFlag',
        'transmission_loss_factor': 'transmissionLossFactor',
        'working_day_credit_assessment_import_capability': 'workingDayCreditAssessmentImportCapability',
        'non_working_day_credit_assessment_import_capability': 'nonWorkingDayCreditAssessmentImportCapability',
        'working_day_credit_assessment_export_capability': 'workingDayCreditAssessmentExportCapability',
        'non_working_day_credit_assessment_export_capability': 'nonWorkingDayCreditAssessmentExportCapability',
        'credit_qualifying_status': 'creditQualifyingStatus',
        'demand_in_production_flag': 'demandInProductionFlag',
        'gsp_group_id': 'gspGroupId',
        'gsp_group_name': 'gspGroupName',
        'interconnector_id': 'interconnectorId'
    }

    def __init__(self, national_grid_bm_unit=None, elexon_bm_unit=None, eic=None, fuel_type=None, lead_party_name=None, bm_unit_type=None, fpn_flag=None, bm_unit_name=None, lead_party_id=None, demand_capacity=None, generation_capacity=None, production_or_consumption_flag=None, transmission_loss_factor=None, working_day_credit_assessment_import_capability=None, non_working_day_credit_assessment_import_capability=None, working_day_credit_assessment_export_capability=None, non_working_day_credit_assessment_export_capability=None, credit_qualifying_status=None, demand_in_production_flag=None, gsp_group_id=None, gsp_group_name=None, interconnector_id=None):  # noqa: E501
        """InsightsApiModelsResponsesReferenceBmUnitData - a model defined in Swagger"""  # noqa: E501
        self._national_grid_bm_unit = None
        self._elexon_bm_unit = None
        self._eic = None
        self._fuel_type = None
        self._lead_party_name = None
        self._bm_unit_type = None
        self._fpn_flag = None
        self._bm_unit_name = None
        self._lead_party_id = None
        self._demand_capacity = None
        self._generation_capacity = None
        self._production_or_consumption_flag = None
        self._transmission_loss_factor = None
        self._working_day_credit_assessment_import_capability = None
        self._non_working_day_credit_assessment_import_capability = None
        self._working_day_credit_assessment_export_capability = None
        self._non_working_day_credit_assessment_export_capability = None
        self._credit_qualifying_status = None
        self._demand_in_production_flag = None
        self._gsp_group_id = None
        self._gsp_group_name = None
        self._interconnector_id = None
        self.discriminator = None
        if national_grid_bm_unit is not None:
            self.national_grid_bm_unit = national_grid_bm_unit
        if elexon_bm_unit is not None:
            self.elexon_bm_unit = elexon_bm_unit
        if eic is not None:
            self.eic = eic
        if fuel_type is not None:
            self.fuel_type = fuel_type
        if lead_party_name is not None:
            self.lead_party_name = lead_party_name
        if bm_unit_type is not None:
            self.bm_unit_type = bm_unit_type
        if fpn_flag is not None:
            self.fpn_flag = fpn_flag
        if bm_unit_name is not None:
            self.bm_unit_name = bm_unit_name
        if lead_party_id is not None:
            self.lead_party_id = lead_party_id
        if demand_capacity is not None:
            self.demand_capacity = demand_capacity
        if generation_capacity is not None:
            self.generation_capacity = generation_capacity
        if production_or_consumption_flag is not None:
            self.production_or_consumption_flag = production_or_consumption_flag
        if transmission_loss_factor is not None:
            self.transmission_loss_factor = transmission_loss_factor
        if working_day_credit_assessment_import_capability is not None:
            self.working_day_credit_assessment_import_capability = working_day_credit_assessment_import_capability
        if non_working_day_credit_assessment_import_capability is not None:
            self.non_working_day_credit_assessment_import_capability = non_working_day_credit_assessment_import_capability
        if working_day_credit_assessment_export_capability is not None:
            self.working_day_credit_assessment_export_capability = working_day_credit_assessment_export_capability
        if non_working_day_credit_assessment_export_capability is not None:
            self.non_working_day_credit_assessment_export_capability = non_working_day_credit_assessment_export_capability
        if credit_qualifying_status is not None:
            self.credit_qualifying_status = credit_qualifying_status
        if demand_in_production_flag is not None:
            self.demand_in_production_flag = demand_in_production_flag
        if gsp_group_id is not None:
            self.gsp_group_id = gsp_group_id
        if gsp_group_name is not None:
            self.gsp_group_name = gsp_group_name
        if interconnector_id is not None:
            self.interconnector_id = interconnector_id

    @property
    def national_grid_bm_unit(self):
        """Gets the national_grid_bm_unit of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501


        :return: The national_grid_bm_unit of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :rtype: str
        """
        return self._national_grid_bm_unit

    @national_grid_bm_unit.setter
    def national_grid_bm_unit(self, national_grid_bm_unit):
        """Sets the national_grid_bm_unit of this InsightsApiModelsResponsesReferenceBmUnitData.


        :param national_grid_bm_unit: The national_grid_bm_unit of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :type: str
        """

        self._national_grid_bm_unit = national_grid_bm_unit

    @property
    def elexon_bm_unit(self):
        """Gets the elexon_bm_unit of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501


        :return: The elexon_bm_unit of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :rtype: str
        """
        return self._elexon_bm_unit

    @elexon_bm_unit.setter
    def elexon_bm_unit(self, elexon_bm_unit):
        """Sets the elexon_bm_unit of this InsightsApiModelsResponsesReferenceBmUnitData.


        :param elexon_bm_unit: The elexon_bm_unit of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :type: str
        """

        self._elexon_bm_unit = elexon_bm_unit

    @property
    def eic(self):
        """Gets the eic of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501


        :return: The eic of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :rtype: str
        """
        return self._eic

    @eic.setter
    def eic(self, eic):
        """Sets the eic of this InsightsApiModelsResponsesReferenceBmUnitData.


        :param eic: The eic of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :type: str
        """

        self._eic = eic

    @property
    def fuel_type(self):
        """Gets the fuel_type of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501


        :return: The fuel_type of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :rtype: str
        """
        return self._fuel_type

    @fuel_type.setter
    def fuel_type(self, fuel_type):
        """Sets the fuel_type of this InsightsApiModelsResponsesReferenceBmUnitData.


        :param fuel_type: The fuel_type of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :type: str
        """

        self._fuel_type = fuel_type

    @property
    def lead_party_name(self):
        """Gets the lead_party_name of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501


        :return: The lead_party_name of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :rtype: str
        """
        return self._lead_party_name

    @lead_party_name.setter
    def lead_party_name(self, lead_party_name):
        """Sets the lead_party_name of this InsightsApiModelsResponsesReferenceBmUnitData.


        :param lead_party_name: The lead_party_name of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :type: str
        """

        self._lead_party_name = lead_party_name

    @property
    def bm_unit_type(self):
        """Gets the bm_unit_type of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501


        :return: The bm_unit_type of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :rtype: str
        """
        return self._bm_unit_type

    @bm_unit_type.setter
    def bm_unit_type(self, bm_unit_type):
        """Sets the bm_unit_type of this InsightsApiModelsResponsesReferenceBmUnitData.


        :param bm_unit_type: The bm_unit_type of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :type: str
        """

        self._bm_unit_type = bm_unit_type

    @property
    def fpn_flag(self):
        """Gets the fpn_flag of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501


        :return: The fpn_flag of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :rtype: bool
        """
        return self._fpn_flag

    @fpn_flag.setter
    def fpn_flag(self, fpn_flag):
        """Sets the fpn_flag of this InsightsApiModelsResponsesReferenceBmUnitData.


        :param fpn_flag: The fpn_flag of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :type: bool
        """

        self._fpn_flag = fpn_flag

    @property
    def bm_unit_name(self):
        """Gets the bm_unit_name of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501


        :return: The bm_unit_name of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :rtype: str
        """
        return self._bm_unit_name

    @bm_unit_name.setter
    def bm_unit_name(self, bm_unit_name):
        """Sets the bm_unit_name of this InsightsApiModelsResponsesReferenceBmUnitData.


        :param bm_unit_name: The bm_unit_name of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :type: str
        """

        self._bm_unit_name = bm_unit_name

    @property
    def lead_party_id(self):
        """Gets the lead_party_id of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501


        :return: The lead_party_id of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :rtype: str
        """
        return self._lead_party_id

    @lead_party_id.setter
    def lead_party_id(self, lead_party_id):
        """Sets the lead_party_id of this InsightsApiModelsResponsesReferenceBmUnitData.


        :param lead_party_id: The lead_party_id of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :type: str
        """

        self._lead_party_id = lead_party_id

    @property
    def demand_capacity(self):
        """Gets the demand_capacity of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501


        :return: The demand_capacity of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :rtype: str
        """
        return self._demand_capacity

    @demand_capacity.setter
    def demand_capacity(self, demand_capacity):
        """Sets the demand_capacity of this InsightsApiModelsResponsesReferenceBmUnitData.


        :param demand_capacity: The demand_capacity of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :type: str
        """

        self._demand_capacity = demand_capacity

    @property
    def generation_capacity(self):
        """Gets the generation_capacity of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501


        :return: The generation_capacity of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :rtype: str
        """
        return self._generation_capacity

    @generation_capacity.setter
    def generation_capacity(self, generation_capacity):
        """Sets the generation_capacity of this InsightsApiModelsResponsesReferenceBmUnitData.


        :param generation_capacity: The generation_capacity of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :type: str
        """

        self._generation_capacity = generation_capacity

    @property
    def production_or_consumption_flag(self):
        """Gets the production_or_consumption_flag of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501


        :return: The production_or_consumption_flag of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :rtype: str
        """
        return self._production_or_consumption_flag

    @production_or_consumption_flag.setter
    def production_or_consumption_flag(self, production_or_consumption_flag):
        """Sets the production_or_consumption_flag of this InsightsApiModelsResponsesReferenceBmUnitData.


        :param production_or_consumption_flag: The production_or_consumption_flag of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :type: str
        """

        self._production_or_consumption_flag = production_or_consumption_flag

    @property
    def transmission_loss_factor(self):
        """Gets the transmission_loss_factor of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501


        :return: The transmission_loss_factor of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :rtype: str
        """
        return self._transmission_loss_factor

    @transmission_loss_factor.setter
    def transmission_loss_factor(self, transmission_loss_factor):
        """Sets the transmission_loss_factor of this InsightsApiModelsResponsesReferenceBmUnitData.


        :param transmission_loss_factor: The transmission_loss_factor of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :type: str
        """

        self._transmission_loss_factor = transmission_loss_factor

    @property
    def working_day_credit_assessment_import_capability(self):
        """Gets the working_day_credit_assessment_import_capability of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501


        :return: The working_day_credit_assessment_import_capability of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :rtype: str
        """
        return self._working_day_credit_assessment_import_capability

    @working_day_credit_assessment_import_capability.setter
    def working_day_credit_assessment_import_capability(self, working_day_credit_assessment_import_capability):
        """Sets the working_day_credit_assessment_import_capability of this InsightsApiModelsResponsesReferenceBmUnitData.


        :param working_day_credit_assessment_import_capability: The working_day_credit_assessment_import_capability of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :type: str
        """

        self._working_day_credit_assessment_import_capability = working_day_credit_assessment_import_capability

    @property
    def non_working_day_credit_assessment_import_capability(self):
        """Gets the non_working_day_credit_assessment_import_capability of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501


        :return: The non_working_day_credit_assessment_import_capability of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :rtype: str
        """
        return self._non_working_day_credit_assessment_import_capability

    @non_working_day_credit_assessment_import_capability.setter
    def non_working_day_credit_assessment_import_capability(self, non_working_day_credit_assessment_import_capability):
        """Sets the non_working_day_credit_assessment_import_capability of this InsightsApiModelsResponsesReferenceBmUnitData.


        :param non_working_day_credit_assessment_import_capability: The non_working_day_credit_assessment_import_capability of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :type: str
        """

        self._non_working_day_credit_assessment_import_capability = non_working_day_credit_assessment_import_capability

    @property
    def working_day_credit_assessment_export_capability(self):
        """Gets the working_day_credit_assessment_export_capability of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501


        :return: The working_day_credit_assessment_export_capability of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :rtype: str
        """
        return self._working_day_credit_assessment_export_capability

    @working_day_credit_assessment_export_capability.setter
    def working_day_credit_assessment_export_capability(self, working_day_credit_assessment_export_capability):
        """Sets the working_day_credit_assessment_export_capability of this InsightsApiModelsResponsesReferenceBmUnitData.


        :param working_day_credit_assessment_export_capability: The working_day_credit_assessment_export_capability of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :type: str
        """

        self._working_day_credit_assessment_export_capability = working_day_credit_assessment_export_capability

    @property
    def non_working_day_credit_assessment_export_capability(self):
        """Gets the non_working_day_credit_assessment_export_capability of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501


        :return: The non_working_day_credit_assessment_export_capability of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :rtype: str
        """
        return self._non_working_day_credit_assessment_export_capability

    @non_working_day_credit_assessment_export_capability.setter
    def non_working_day_credit_assessment_export_capability(self, non_working_day_credit_assessment_export_capability):
        """Sets the non_working_day_credit_assessment_export_capability of this InsightsApiModelsResponsesReferenceBmUnitData.


        :param non_working_day_credit_assessment_export_capability: The non_working_day_credit_assessment_export_capability of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :type: str
        """

        self._non_working_day_credit_assessment_export_capability = non_working_day_credit_assessment_export_capability

    @property
    def credit_qualifying_status(self):
        """Gets the credit_qualifying_status of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501


        :return: The credit_qualifying_status of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :rtype: bool
        """
        return self._credit_qualifying_status

    @credit_qualifying_status.setter
    def credit_qualifying_status(self, credit_qualifying_status):
        """Sets the credit_qualifying_status of this InsightsApiModelsResponsesReferenceBmUnitData.


        :param credit_qualifying_status: The credit_qualifying_status of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :type: bool
        """

        self._credit_qualifying_status = credit_qualifying_status

    @property
    def demand_in_production_flag(self):
        """Gets the demand_in_production_flag of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501


        :return: The demand_in_production_flag of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :rtype: bool
        """
        return self._demand_in_production_flag

    @demand_in_production_flag.setter
    def demand_in_production_flag(self, demand_in_production_flag):
        """Sets the demand_in_production_flag of this InsightsApiModelsResponsesReferenceBmUnitData.


        :param demand_in_production_flag: The demand_in_production_flag of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :type: bool
        """

        self._demand_in_production_flag = demand_in_production_flag

    @property
    def gsp_group_id(self):
        """Gets the gsp_group_id of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501


        :return: The gsp_group_id of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :rtype: str
        """
        return self._gsp_group_id

    @gsp_group_id.setter
    def gsp_group_id(self, gsp_group_id):
        """Sets the gsp_group_id of this InsightsApiModelsResponsesReferenceBmUnitData.


        :param gsp_group_id: The gsp_group_id of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :type: str
        """

        self._gsp_group_id = gsp_group_id

    @property
    def gsp_group_name(self):
        """Gets the gsp_group_name of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501


        :return: The gsp_group_name of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :rtype: str
        """
        return self._gsp_group_name

    @gsp_group_name.setter
    def gsp_group_name(self, gsp_group_name):
        """Sets the gsp_group_name of this InsightsApiModelsResponsesReferenceBmUnitData.


        :param gsp_group_name: The gsp_group_name of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :type: str
        """

        self._gsp_group_name = gsp_group_name

    @property
    def interconnector_id(self):
        """Gets the interconnector_id of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501


        :return: The interconnector_id of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :rtype: str
        """
        return self._interconnector_id

    @interconnector_id.setter
    def interconnector_id(self, interconnector_id):
        """Sets the interconnector_id of this InsightsApiModelsResponsesReferenceBmUnitData.


        :param interconnector_id: The interconnector_id of this InsightsApiModelsResponsesReferenceBmUnitData.  # noqa: E501
        :type: str
        """

        self._interconnector_id = interconnector_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InsightsApiModelsResponsesReferenceBmUnitData, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InsightsApiModelsResponsesReferenceBmUnitData):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
