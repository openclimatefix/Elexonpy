# coding: utf-8

"""
    Insights API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'created_date_time': 'datetime',
        'settlement_date': 'date',
        'settlement_period': 'int',
        'start_time': 'datetime',
        'adjuster': 'float',
        'price_derivation_code': 'str',
        'system_sell_price': 'float',
        'system_buy_price': 'float',
        'main_price': 'InsightsApiModelsResponsesBalancingSettlementSettlementSummaryPrice',
        'market_price': 'InsightsApiModelsResponsesBalancingSettlementSettlementSummaryPrice'
    }

    attribute_map = {
        'created_date_time': 'createdDateTime',
        'settlement_date': 'settlementDate',
        'settlement_period': 'settlementPeriod',
        'start_time': 'startTime',
        'adjuster': 'adjuster',
        'price_derivation_code': 'priceDerivationCode',
        'system_sell_price': 'systemSellPrice',
        'system_buy_price': 'systemBuyPrice',
        'main_price': 'mainPrice',
        'market_price': 'marketPrice'
    }

    def __init__(self, created_date_time=None, settlement_date=None, settlement_period=None, start_time=None, adjuster=None, price_derivation_code=None, system_sell_price=None, system_buy_price=None, main_price=None, market_price=None):  # noqa: E501
        """InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse - a model defined in Swagger"""  # noqa: E501
        self._created_date_time = None
        self._settlement_date = None
        self._settlement_period = None
        self._start_time = None
        self._adjuster = None
        self._price_derivation_code = None
        self._system_sell_price = None
        self._system_buy_price = None
        self._main_price = None
        self._market_price = None
        self.discriminator = None
        if created_date_time is not None:
            self.created_date_time = created_date_time
        if settlement_date is not None:
            self.settlement_date = settlement_date
        if settlement_period is not None:
            self.settlement_period = settlement_period
        if start_time is not None:
            self.start_time = start_time
        if adjuster is not None:
            self.adjuster = adjuster
        if price_derivation_code is not None:
            self.price_derivation_code = price_derivation_code
        if system_sell_price is not None:
            self.system_sell_price = system_sell_price
        if system_buy_price is not None:
            self.system_buy_price = system_buy_price
        if main_price is not None:
            self.main_price = main_price
        if market_price is not None:
            self.market_price = market_price

    @property
    def created_date_time(self):
        """Gets the created_date_time of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.  # noqa: E501


        :return: The created_date_time of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._created_date_time

    @created_date_time.setter
    def created_date_time(self, created_date_time):
        """Sets the created_date_time of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.


        :param created_date_time: The created_date_time of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.  # noqa: E501
        :type: datetime
        """

        self._created_date_time = created_date_time

    @property
    def settlement_date(self):
        """Gets the settlement_date of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.  # noqa: E501


        :return: The settlement_date of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.  # noqa: E501
        :rtype: date
        """
        return self._settlement_date

    @settlement_date.setter
    def settlement_date(self, settlement_date):
        """Sets the settlement_date of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.


        :param settlement_date: The settlement_date of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.  # noqa: E501
        :type: date
        """

        self._settlement_date = settlement_date

    @property
    def settlement_period(self):
        """Gets the settlement_period of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.  # noqa: E501


        :return: The settlement_period of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.  # noqa: E501
        :rtype: int
        """
        return self._settlement_period

    @settlement_period.setter
    def settlement_period(self, settlement_period):
        """Sets the settlement_period of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.


        :param settlement_period: The settlement_period of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.  # noqa: E501
        :type: int
        """

        self._settlement_period = settlement_period

    @property
    def start_time(self):
        """Gets the start_time of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.  # noqa: E501


        :return: The start_time of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.


        :param start_time: The start_time of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.  # noqa: E501
        :type: datetime
        """

        self._start_time = start_time

    @property
    def adjuster(self):
        """Gets the adjuster of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.  # noqa: E501


        :return: The adjuster of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.  # noqa: E501
        :rtype: float
        """
        return self._adjuster

    @adjuster.setter
    def adjuster(self, adjuster):
        """Sets the adjuster of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.


        :param adjuster: The adjuster of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.  # noqa: E501
        :type: float
        """

        self._adjuster = adjuster

    @property
    def price_derivation_code(self):
        """Gets the price_derivation_code of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.  # noqa: E501


        :return: The price_derivation_code of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.  # noqa: E501
        :rtype: str
        """
        return self._price_derivation_code

    @price_derivation_code.setter
    def price_derivation_code(self, price_derivation_code):
        """Sets the price_derivation_code of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.


        :param price_derivation_code: The price_derivation_code of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.  # noqa: E501
        :type: str
        """

        self._price_derivation_code = price_derivation_code

    @property
    def system_sell_price(self):
        """Gets the system_sell_price of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.  # noqa: E501


        :return: The system_sell_price of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.  # noqa: E501
        :rtype: float
        """
        return self._system_sell_price

    @system_sell_price.setter
    def system_sell_price(self, system_sell_price):
        """Sets the system_sell_price of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.


        :param system_sell_price: The system_sell_price of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.  # noqa: E501
        :type: float
        """

        self._system_sell_price = system_sell_price

    @property
    def system_buy_price(self):
        """Gets the system_buy_price of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.  # noqa: E501


        :return: The system_buy_price of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.  # noqa: E501
        :rtype: float
        """
        return self._system_buy_price

    @system_buy_price.setter
    def system_buy_price(self, system_buy_price):
        """Sets the system_buy_price of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.


        :param system_buy_price: The system_buy_price of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.  # noqa: E501
        :type: float
        """

        self._system_buy_price = system_buy_price

    @property
    def main_price(self):
        """Gets the main_price of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.  # noqa: E501


        :return: The main_price of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.  # noqa: E501
        :rtype: InsightsApiModelsResponsesBalancingSettlementSettlementSummaryPrice
        """
        return self._main_price

    @main_price.setter
    def main_price(self, main_price):
        """Sets the main_price of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.


        :param main_price: The main_price of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.  # noqa: E501
        :type: InsightsApiModelsResponsesBalancingSettlementSettlementSummaryPrice
        """

        self._main_price = main_price

    @property
    def market_price(self):
        """Gets the market_price of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.  # noqa: E501


        :return: The market_price of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.  # noqa: E501
        :rtype: InsightsApiModelsResponsesBalancingSettlementSettlementSummaryPrice
        """
        return self._market_price

    @market_price.setter
    def market_price(self, market_price):
        """Sets the market_price of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.


        :param market_price: The market_price of this InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse.  # noqa: E501
        :type: InsightsApiModelsResponsesBalancingSettlementSettlementSummaryPrice
        """

        self._market_price = market_price

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list([x.to_dict() if hasattr(x, "to_dict") else x for x in value])
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict([(item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item for item in list(value.items())])
            else:
                result[attr] = value
        if issubclass(InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse, dict):
            for key, value in list(self.items()):
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InsightsApiModelsResponsesBalancingSettlementSettlementSummaryResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
