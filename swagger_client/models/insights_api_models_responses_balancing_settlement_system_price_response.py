# coding: utf-8

"""
    Insights API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'settlement_date': 'date',
        'settlement_period': 'int',
        'start_time': 'datetime',
        'created_date_time': 'datetime',
        'system_sell_price': 'float',
        'system_buy_price': 'float',
        'bsad_defaulted': 'bool',
        'price_derivation_code': 'str',
        'reserve_scarcity_price': 'float',
        'net_imbalance_volume': 'float',
        'sell_price_adjustment': 'float',
        'buy_price_adjustment': 'float',
        'replacement_price': 'float',
        'replacement_price_reference_volume': 'float',
        'total_accepted_offer_volume': 'float',
        'total_accepted_bid_volume': 'float',
        'total_adjustment_sell_volume': 'float',
        'total_adjustment_buy_volume': 'float',
        'total_system_tagged_accepted_offer_volume': 'float',
        'total_system_tagged_accepted_bid_volume': 'float',
        'total_system_tagged_adjustment_sell_volume': 'float',
        'total_system_tagged_adjustment_buy_volume': 'float'
    }

    attribute_map = {
        'settlement_date': 'settlementDate',
        'settlement_period': 'settlementPeriod',
        'start_time': 'startTime',
        'created_date_time': 'createdDateTime',
        'system_sell_price': 'systemSellPrice',
        'system_buy_price': 'systemBuyPrice',
        'bsad_defaulted': 'bsadDefaulted',
        'price_derivation_code': 'priceDerivationCode',
        'reserve_scarcity_price': 'reserveScarcityPrice',
        'net_imbalance_volume': 'netImbalanceVolume',
        'sell_price_adjustment': 'sellPriceAdjustment',
        'buy_price_adjustment': 'buyPriceAdjustment',
        'replacement_price': 'replacementPrice',
        'replacement_price_reference_volume': 'replacementPriceReferenceVolume',
        'total_accepted_offer_volume': 'totalAcceptedOfferVolume',
        'total_accepted_bid_volume': 'totalAcceptedBidVolume',
        'total_adjustment_sell_volume': 'totalAdjustmentSellVolume',
        'total_adjustment_buy_volume': 'totalAdjustmentBuyVolume',
        'total_system_tagged_accepted_offer_volume': 'totalSystemTaggedAcceptedOfferVolume',
        'total_system_tagged_accepted_bid_volume': 'totalSystemTaggedAcceptedBidVolume',
        'total_system_tagged_adjustment_sell_volume': 'totalSystemTaggedAdjustmentSellVolume',
        'total_system_tagged_adjustment_buy_volume': 'totalSystemTaggedAdjustmentBuyVolume'
    }

    def __init__(self, settlement_date=None, settlement_period=None, start_time=None, created_date_time=None, system_sell_price=None, system_buy_price=None, bsad_defaulted=None, price_derivation_code=None, reserve_scarcity_price=None, net_imbalance_volume=None, sell_price_adjustment=None, buy_price_adjustment=None, replacement_price=None, replacement_price_reference_volume=None, total_accepted_offer_volume=None, total_accepted_bid_volume=None, total_adjustment_sell_volume=None, total_adjustment_buy_volume=None, total_system_tagged_accepted_offer_volume=None, total_system_tagged_accepted_bid_volume=None, total_system_tagged_adjustment_sell_volume=None, total_system_tagged_adjustment_buy_volume=None):  # noqa: E501
        """InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse - a model defined in Swagger"""  # noqa: E501
        self._settlement_date = None
        self._settlement_period = None
        self._start_time = None
        self._created_date_time = None
        self._system_sell_price = None
        self._system_buy_price = None
        self._bsad_defaulted = None
        self._price_derivation_code = None
        self._reserve_scarcity_price = None
        self._net_imbalance_volume = None
        self._sell_price_adjustment = None
        self._buy_price_adjustment = None
        self._replacement_price = None
        self._replacement_price_reference_volume = None
        self._total_accepted_offer_volume = None
        self._total_accepted_bid_volume = None
        self._total_adjustment_sell_volume = None
        self._total_adjustment_buy_volume = None
        self._total_system_tagged_accepted_offer_volume = None
        self._total_system_tagged_accepted_bid_volume = None
        self._total_system_tagged_adjustment_sell_volume = None
        self._total_system_tagged_adjustment_buy_volume = None
        self.discriminator = None
        if settlement_date is not None:
            self.settlement_date = settlement_date
        if settlement_period is not None:
            self.settlement_period = settlement_period
        if start_time is not None:
            self.start_time = start_time
        if created_date_time is not None:
            self.created_date_time = created_date_time
        if system_sell_price is not None:
            self.system_sell_price = system_sell_price
        if system_buy_price is not None:
            self.system_buy_price = system_buy_price
        if bsad_defaulted is not None:
            self.bsad_defaulted = bsad_defaulted
        if price_derivation_code is not None:
            self.price_derivation_code = price_derivation_code
        if reserve_scarcity_price is not None:
            self.reserve_scarcity_price = reserve_scarcity_price
        if net_imbalance_volume is not None:
            self.net_imbalance_volume = net_imbalance_volume
        if sell_price_adjustment is not None:
            self.sell_price_adjustment = sell_price_adjustment
        if buy_price_adjustment is not None:
            self.buy_price_adjustment = buy_price_adjustment
        if replacement_price is not None:
            self.replacement_price = replacement_price
        if replacement_price_reference_volume is not None:
            self.replacement_price_reference_volume = replacement_price_reference_volume
        if total_accepted_offer_volume is not None:
            self.total_accepted_offer_volume = total_accepted_offer_volume
        if total_accepted_bid_volume is not None:
            self.total_accepted_bid_volume = total_accepted_bid_volume
        if total_adjustment_sell_volume is not None:
            self.total_adjustment_sell_volume = total_adjustment_sell_volume
        if total_adjustment_buy_volume is not None:
            self.total_adjustment_buy_volume = total_adjustment_buy_volume
        if total_system_tagged_accepted_offer_volume is not None:
            self.total_system_tagged_accepted_offer_volume = total_system_tagged_accepted_offer_volume
        if total_system_tagged_accepted_bid_volume is not None:
            self.total_system_tagged_accepted_bid_volume = total_system_tagged_accepted_bid_volume
        if total_system_tagged_adjustment_sell_volume is not None:
            self.total_system_tagged_adjustment_sell_volume = total_system_tagged_adjustment_sell_volume
        if total_system_tagged_adjustment_buy_volume is not None:
            self.total_system_tagged_adjustment_buy_volume = total_system_tagged_adjustment_buy_volume

    @property
    def settlement_date(self):
        """Gets the settlement_date of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501


        :return: The settlement_date of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :rtype: date
        """
        return self._settlement_date

    @settlement_date.setter
    def settlement_date(self, settlement_date):
        """Sets the settlement_date of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.


        :param settlement_date: The settlement_date of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :type: date
        """

        self._settlement_date = settlement_date

    @property
    def settlement_period(self):
        """Gets the settlement_period of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501


        :return: The settlement_period of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :rtype: int
        """
        return self._settlement_period

    @settlement_period.setter
    def settlement_period(self, settlement_period):
        """Sets the settlement_period of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.


        :param settlement_period: The settlement_period of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :type: int
        """

        self._settlement_period = settlement_period

    @property
    def start_time(self):
        """Gets the start_time of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501


        :return: The start_time of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.


        :param start_time: The start_time of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :type: datetime
        """

        self._start_time = start_time

    @property
    def created_date_time(self):
        """Gets the created_date_time of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501


        :return: The created_date_time of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._created_date_time

    @created_date_time.setter
    def created_date_time(self, created_date_time):
        """Sets the created_date_time of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.


        :param created_date_time: The created_date_time of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :type: datetime
        """

        self._created_date_time = created_date_time

    @property
    def system_sell_price(self):
        """Gets the system_sell_price of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501


        :return: The system_sell_price of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :rtype: float
        """
        return self._system_sell_price

    @system_sell_price.setter
    def system_sell_price(self, system_sell_price):
        """Sets the system_sell_price of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.


        :param system_sell_price: The system_sell_price of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :type: float
        """

        self._system_sell_price = system_sell_price

    @property
    def system_buy_price(self):
        """Gets the system_buy_price of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501


        :return: The system_buy_price of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :rtype: float
        """
        return self._system_buy_price

    @system_buy_price.setter
    def system_buy_price(self, system_buy_price):
        """Sets the system_buy_price of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.


        :param system_buy_price: The system_buy_price of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :type: float
        """

        self._system_buy_price = system_buy_price

    @property
    def bsad_defaulted(self):
        """Gets the bsad_defaulted of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501


        :return: The bsad_defaulted of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :rtype: bool
        """
        return self._bsad_defaulted

    @bsad_defaulted.setter
    def bsad_defaulted(self, bsad_defaulted):
        """Sets the bsad_defaulted of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.


        :param bsad_defaulted: The bsad_defaulted of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :type: bool
        """

        self._bsad_defaulted = bsad_defaulted

    @property
    def price_derivation_code(self):
        """Gets the price_derivation_code of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501


        :return: The price_derivation_code of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :rtype: str
        """
        return self._price_derivation_code

    @price_derivation_code.setter
    def price_derivation_code(self, price_derivation_code):
        """Sets the price_derivation_code of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.


        :param price_derivation_code: The price_derivation_code of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :type: str
        """

        self._price_derivation_code = price_derivation_code

    @property
    def reserve_scarcity_price(self):
        """Gets the reserve_scarcity_price of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501


        :return: The reserve_scarcity_price of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :rtype: float
        """
        return self._reserve_scarcity_price

    @reserve_scarcity_price.setter
    def reserve_scarcity_price(self, reserve_scarcity_price):
        """Sets the reserve_scarcity_price of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.


        :param reserve_scarcity_price: The reserve_scarcity_price of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :type: float
        """

        self._reserve_scarcity_price = reserve_scarcity_price

    @property
    def net_imbalance_volume(self):
        """Gets the net_imbalance_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501


        :return: The net_imbalance_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :rtype: float
        """
        return self._net_imbalance_volume

    @net_imbalance_volume.setter
    def net_imbalance_volume(self, net_imbalance_volume):
        """Sets the net_imbalance_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.


        :param net_imbalance_volume: The net_imbalance_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :type: float
        """

        self._net_imbalance_volume = net_imbalance_volume

    @property
    def sell_price_adjustment(self):
        """Gets the sell_price_adjustment of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501


        :return: The sell_price_adjustment of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :rtype: float
        """
        return self._sell_price_adjustment

    @sell_price_adjustment.setter
    def sell_price_adjustment(self, sell_price_adjustment):
        """Sets the sell_price_adjustment of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.


        :param sell_price_adjustment: The sell_price_adjustment of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :type: float
        """

        self._sell_price_adjustment = sell_price_adjustment

    @property
    def buy_price_adjustment(self):
        """Gets the buy_price_adjustment of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501


        :return: The buy_price_adjustment of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :rtype: float
        """
        return self._buy_price_adjustment

    @buy_price_adjustment.setter
    def buy_price_adjustment(self, buy_price_adjustment):
        """Sets the buy_price_adjustment of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.


        :param buy_price_adjustment: The buy_price_adjustment of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :type: float
        """

        self._buy_price_adjustment = buy_price_adjustment

    @property
    def replacement_price(self):
        """Gets the replacement_price of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501


        :return: The replacement_price of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :rtype: float
        """
        return self._replacement_price

    @replacement_price.setter
    def replacement_price(self, replacement_price):
        """Sets the replacement_price of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.


        :param replacement_price: The replacement_price of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :type: float
        """

        self._replacement_price = replacement_price

    @property
    def replacement_price_reference_volume(self):
        """Gets the replacement_price_reference_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501


        :return: The replacement_price_reference_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :rtype: float
        """
        return self._replacement_price_reference_volume

    @replacement_price_reference_volume.setter
    def replacement_price_reference_volume(self, replacement_price_reference_volume):
        """Sets the replacement_price_reference_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.


        :param replacement_price_reference_volume: The replacement_price_reference_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :type: float
        """

        self._replacement_price_reference_volume = replacement_price_reference_volume

    @property
    def total_accepted_offer_volume(self):
        """Gets the total_accepted_offer_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501


        :return: The total_accepted_offer_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :rtype: float
        """
        return self._total_accepted_offer_volume

    @total_accepted_offer_volume.setter
    def total_accepted_offer_volume(self, total_accepted_offer_volume):
        """Sets the total_accepted_offer_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.


        :param total_accepted_offer_volume: The total_accepted_offer_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :type: float
        """

        self._total_accepted_offer_volume = total_accepted_offer_volume

    @property
    def total_accepted_bid_volume(self):
        """Gets the total_accepted_bid_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501


        :return: The total_accepted_bid_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :rtype: float
        """
        return self._total_accepted_bid_volume

    @total_accepted_bid_volume.setter
    def total_accepted_bid_volume(self, total_accepted_bid_volume):
        """Sets the total_accepted_bid_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.


        :param total_accepted_bid_volume: The total_accepted_bid_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :type: float
        """

        self._total_accepted_bid_volume = total_accepted_bid_volume

    @property
    def total_adjustment_sell_volume(self):
        """Gets the total_adjustment_sell_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501


        :return: The total_adjustment_sell_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :rtype: float
        """
        return self._total_adjustment_sell_volume

    @total_adjustment_sell_volume.setter
    def total_adjustment_sell_volume(self, total_adjustment_sell_volume):
        """Sets the total_adjustment_sell_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.


        :param total_adjustment_sell_volume: The total_adjustment_sell_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :type: float
        """

        self._total_adjustment_sell_volume = total_adjustment_sell_volume

    @property
    def total_adjustment_buy_volume(self):
        """Gets the total_adjustment_buy_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501


        :return: The total_adjustment_buy_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :rtype: float
        """
        return self._total_adjustment_buy_volume

    @total_adjustment_buy_volume.setter
    def total_adjustment_buy_volume(self, total_adjustment_buy_volume):
        """Sets the total_adjustment_buy_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.


        :param total_adjustment_buy_volume: The total_adjustment_buy_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :type: float
        """

        self._total_adjustment_buy_volume = total_adjustment_buy_volume

    @property
    def total_system_tagged_accepted_offer_volume(self):
        """Gets the total_system_tagged_accepted_offer_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501


        :return: The total_system_tagged_accepted_offer_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :rtype: float
        """
        return self._total_system_tagged_accepted_offer_volume

    @total_system_tagged_accepted_offer_volume.setter
    def total_system_tagged_accepted_offer_volume(self, total_system_tagged_accepted_offer_volume):
        """Sets the total_system_tagged_accepted_offer_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.


        :param total_system_tagged_accepted_offer_volume: The total_system_tagged_accepted_offer_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :type: float
        """

        self._total_system_tagged_accepted_offer_volume = total_system_tagged_accepted_offer_volume

    @property
    def total_system_tagged_accepted_bid_volume(self):
        """Gets the total_system_tagged_accepted_bid_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501


        :return: The total_system_tagged_accepted_bid_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :rtype: float
        """
        return self._total_system_tagged_accepted_bid_volume

    @total_system_tagged_accepted_bid_volume.setter
    def total_system_tagged_accepted_bid_volume(self, total_system_tagged_accepted_bid_volume):
        """Sets the total_system_tagged_accepted_bid_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.


        :param total_system_tagged_accepted_bid_volume: The total_system_tagged_accepted_bid_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :type: float
        """

        self._total_system_tagged_accepted_bid_volume = total_system_tagged_accepted_bid_volume

    @property
    def total_system_tagged_adjustment_sell_volume(self):
        """Gets the total_system_tagged_adjustment_sell_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501


        :return: The total_system_tagged_adjustment_sell_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :rtype: float
        """
        return self._total_system_tagged_adjustment_sell_volume

    @total_system_tagged_adjustment_sell_volume.setter
    def total_system_tagged_adjustment_sell_volume(self, total_system_tagged_adjustment_sell_volume):
        """Sets the total_system_tagged_adjustment_sell_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.


        :param total_system_tagged_adjustment_sell_volume: The total_system_tagged_adjustment_sell_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :type: float
        """

        self._total_system_tagged_adjustment_sell_volume = total_system_tagged_adjustment_sell_volume

    @property
    def total_system_tagged_adjustment_buy_volume(self):
        """Gets the total_system_tagged_adjustment_buy_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501


        :return: The total_system_tagged_adjustment_buy_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :rtype: float
        """
        return self._total_system_tagged_adjustment_buy_volume

    @total_system_tagged_adjustment_buy_volume.setter
    def total_system_tagged_adjustment_buy_volume(self, total_system_tagged_adjustment_buy_volume):
        """Sets the total_system_tagged_adjustment_buy_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.


        :param total_system_tagged_adjustment_buy_volume: The total_system_tagged_adjustment_buy_volume of this InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse.  # noqa: E501
        :type: float
        """

        self._total_system_tagged_adjustment_buy_volume = total_system_tagged_adjustment_buy_volume

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InsightsApiModelsResponsesBalancingSettlementSystemPriceResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
