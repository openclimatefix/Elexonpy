# coding: utf-8

"""
    Insights API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'settlement_date': 'date',
        'settlement_period': 'int',
        'start_time': 'datetime',
        'created_date_time': 'datetime',
        'sequence_number': 'int',
        'id': 'str',
        'acceptance_id': 'int',
        'bid_offer_pair_id': 'int',
        'cadl_flag': 'bool',
        'so_flag': 'bool',
        'stor_provider_flag': 'bool',
        'repriced_indicator': 'bool',
        'reserve_scarcity_price': 'float',
        'original_price': 'float',
        'volume': 'float',
        'dmat_adjusted_volume': 'float',
        'arbitrage_adjusted_volume': 'float',
        'niv_adjusted_volume': 'float',
        'par_adjusted_volume': 'float',
        'final_price': 'float',
        'transmission_loss_multiplier': 'float',
        'tlm_adjusted_volume': 'float',
        'tlm_adjusted_cost': 'float'
    }

    attribute_map = {
        'settlement_date': 'settlementDate',
        'settlement_period': 'settlementPeriod',
        'start_time': 'startTime',
        'created_date_time': 'createdDateTime',
        'sequence_number': 'sequenceNumber',
        'id': 'id',
        'acceptance_id': 'acceptanceId',
        'bid_offer_pair_id': 'bidOfferPairId',
        'cadl_flag': 'cadlFlag',
        'so_flag': 'soFlag',
        'stor_provider_flag': 'storProviderFlag',
        'repriced_indicator': 'repricedIndicator',
        'reserve_scarcity_price': 'reserveScarcityPrice',
        'original_price': 'originalPrice',
        'volume': 'volume',
        'dmat_adjusted_volume': 'dmatAdjustedVolume',
        'arbitrage_adjusted_volume': 'arbitrageAdjustedVolume',
        'niv_adjusted_volume': 'nivAdjustedVolume',
        'par_adjusted_volume': 'parAdjustedVolume',
        'final_price': 'finalPrice',
        'transmission_loss_multiplier': 'transmissionLossMultiplier',
        'tlm_adjusted_volume': 'tlmAdjustedVolume',
        'tlm_adjusted_cost': 'tlmAdjustedCost'
    }

    def __init__(self, settlement_date=None, settlement_period=None, start_time=None, created_date_time=None, sequence_number=None, id=None, acceptance_id=None, bid_offer_pair_id=None, cadl_flag=None, so_flag=None, stor_provider_flag=None, repriced_indicator=None, reserve_scarcity_price=None, original_price=None, volume=None, dmat_adjusted_volume=None, arbitrage_adjusted_volume=None, niv_adjusted_volume=None, par_adjusted_volume=None, final_price=None, transmission_loss_multiplier=None, tlm_adjusted_volume=None, tlm_adjusted_cost=None):  # noqa: E501
        """InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse - a model defined in Swagger"""  # noqa: E501
        self._settlement_date = None
        self._settlement_period = None
        self._start_time = None
        self._created_date_time = None
        self._sequence_number = None
        self._id = None
        self._acceptance_id = None
        self._bid_offer_pair_id = None
        self._cadl_flag = None
        self._so_flag = None
        self._stor_provider_flag = None
        self._repriced_indicator = None
        self._reserve_scarcity_price = None
        self._original_price = None
        self._volume = None
        self._dmat_adjusted_volume = None
        self._arbitrage_adjusted_volume = None
        self._niv_adjusted_volume = None
        self._par_adjusted_volume = None
        self._final_price = None
        self._transmission_loss_multiplier = None
        self._tlm_adjusted_volume = None
        self._tlm_adjusted_cost = None
        self.discriminator = None
        if settlement_date is not None:
            self.settlement_date = settlement_date
        if settlement_period is not None:
            self.settlement_period = settlement_period
        if start_time is not None:
            self.start_time = start_time
        if created_date_time is not None:
            self.created_date_time = created_date_time
        if sequence_number is not None:
            self.sequence_number = sequence_number
        if id is not None:
            self.id = id
        if acceptance_id is not None:
            self.acceptance_id = acceptance_id
        if bid_offer_pair_id is not None:
            self.bid_offer_pair_id = bid_offer_pair_id
        if cadl_flag is not None:
            self.cadl_flag = cadl_flag
        if so_flag is not None:
            self.so_flag = so_flag
        if stor_provider_flag is not None:
            self.stor_provider_flag = stor_provider_flag
        if repriced_indicator is not None:
            self.repriced_indicator = repriced_indicator
        if reserve_scarcity_price is not None:
            self.reserve_scarcity_price = reserve_scarcity_price
        if original_price is not None:
            self.original_price = original_price
        if volume is not None:
            self.volume = volume
        if dmat_adjusted_volume is not None:
            self.dmat_adjusted_volume = dmat_adjusted_volume
        if arbitrage_adjusted_volume is not None:
            self.arbitrage_adjusted_volume = arbitrage_adjusted_volume
        if niv_adjusted_volume is not None:
            self.niv_adjusted_volume = niv_adjusted_volume
        if par_adjusted_volume is not None:
            self.par_adjusted_volume = par_adjusted_volume
        if final_price is not None:
            self.final_price = final_price
        if transmission_loss_multiplier is not None:
            self.transmission_loss_multiplier = transmission_loss_multiplier
        if tlm_adjusted_volume is not None:
            self.tlm_adjusted_volume = tlm_adjusted_volume
        if tlm_adjusted_cost is not None:
            self.tlm_adjusted_cost = tlm_adjusted_cost

    @property
    def settlement_date(self):
        """Gets the settlement_date of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501


        :return: The settlement_date of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :rtype: date
        """
        return self._settlement_date

    @settlement_date.setter
    def settlement_date(self, settlement_date):
        """Sets the settlement_date of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.


        :param settlement_date: The settlement_date of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :type: date
        """

        self._settlement_date = settlement_date

    @property
    def settlement_period(self):
        """Gets the settlement_period of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501


        :return: The settlement_period of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :rtype: int
        """
        return self._settlement_period

    @settlement_period.setter
    def settlement_period(self, settlement_period):
        """Sets the settlement_period of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.


        :param settlement_period: The settlement_period of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :type: int
        """

        self._settlement_period = settlement_period

    @property
    def start_time(self):
        """Gets the start_time of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501


        :return: The start_time of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.


        :param start_time: The start_time of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :type: datetime
        """

        self._start_time = start_time

    @property
    def created_date_time(self):
        """Gets the created_date_time of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501


        :return: The created_date_time of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._created_date_time

    @created_date_time.setter
    def created_date_time(self, created_date_time):
        """Sets the created_date_time of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.


        :param created_date_time: The created_date_time of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :type: datetime
        """

        self._created_date_time = created_date_time

    @property
    def sequence_number(self):
        """Gets the sequence_number of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501


        :return: The sequence_number of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :rtype: int
        """
        return self._sequence_number

    @sequence_number.setter
    def sequence_number(self, sequence_number):
        """Sets the sequence_number of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.


        :param sequence_number: The sequence_number of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :type: int
        """

        self._sequence_number = sequence_number

    @property
    def id(self):
        """Gets the id of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501


        :return: The id of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.


        :param id: The id of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def acceptance_id(self):
        """Gets the acceptance_id of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501


        :return: The acceptance_id of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :rtype: int
        """
        return self._acceptance_id

    @acceptance_id.setter
    def acceptance_id(self, acceptance_id):
        """Sets the acceptance_id of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.


        :param acceptance_id: The acceptance_id of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :type: int
        """

        self._acceptance_id = acceptance_id

    @property
    def bid_offer_pair_id(self):
        """Gets the bid_offer_pair_id of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501


        :return: The bid_offer_pair_id of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :rtype: int
        """
        return self._bid_offer_pair_id

    @bid_offer_pair_id.setter
    def bid_offer_pair_id(self, bid_offer_pair_id):
        """Sets the bid_offer_pair_id of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.


        :param bid_offer_pair_id: The bid_offer_pair_id of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :type: int
        """

        self._bid_offer_pair_id = bid_offer_pair_id

    @property
    def cadl_flag(self):
        """Gets the cadl_flag of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501


        :return: The cadl_flag of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :rtype: bool
        """
        return self._cadl_flag

    @cadl_flag.setter
    def cadl_flag(self, cadl_flag):
        """Sets the cadl_flag of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.


        :param cadl_flag: The cadl_flag of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :type: bool
        """

        self._cadl_flag = cadl_flag

    @property
    def so_flag(self):
        """Gets the so_flag of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501


        :return: The so_flag of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :rtype: bool
        """
        return self._so_flag

    @so_flag.setter
    def so_flag(self, so_flag):
        """Sets the so_flag of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.


        :param so_flag: The so_flag of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :type: bool
        """

        self._so_flag = so_flag

    @property
    def stor_provider_flag(self):
        """Gets the stor_provider_flag of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501


        :return: The stor_provider_flag of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :rtype: bool
        """
        return self._stor_provider_flag

    @stor_provider_flag.setter
    def stor_provider_flag(self, stor_provider_flag):
        """Sets the stor_provider_flag of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.


        :param stor_provider_flag: The stor_provider_flag of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :type: bool
        """

        self._stor_provider_flag = stor_provider_flag

    @property
    def repriced_indicator(self):
        """Gets the repriced_indicator of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501


        :return: The repriced_indicator of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :rtype: bool
        """
        return self._repriced_indicator

    @repriced_indicator.setter
    def repriced_indicator(self, repriced_indicator):
        """Sets the repriced_indicator of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.


        :param repriced_indicator: The repriced_indicator of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :type: bool
        """

        self._repriced_indicator = repriced_indicator

    @property
    def reserve_scarcity_price(self):
        """Gets the reserve_scarcity_price of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501


        :return: The reserve_scarcity_price of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :rtype: float
        """
        return self._reserve_scarcity_price

    @reserve_scarcity_price.setter
    def reserve_scarcity_price(self, reserve_scarcity_price):
        """Sets the reserve_scarcity_price of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.


        :param reserve_scarcity_price: The reserve_scarcity_price of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :type: float
        """

        self._reserve_scarcity_price = reserve_scarcity_price

    @property
    def original_price(self):
        """Gets the original_price of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501


        :return: The original_price of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :rtype: float
        """
        return self._original_price

    @original_price.setter
    def original_price(self, original_price):
        """Sets the original_price of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.


        :param original_price: The original_price of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :type: float
        """

        self._original_price = original_price

    @property
    def volume(self):
        """Gets the volume of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501


        :return: The volume of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :rtype: float
        """
        return self._volume

    @volume.setter
    def volume(self, volume):
        """Sets the volume of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.


        :param volume: The volume of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :type: float
        """

        self._volume = volume

    @property
    def dmat_adjusted_volume(self):
        """Gets the dmat_adjusted_volume of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501


        :return: The dmat_adjusted_volume of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :rtype: float
        """
        return self._dmat_adjusted_volume

    @dmat_adjusted_volume.setter
    def dmat_adjusted_volume(self, dmat_adjusted_volume):
        """Sets the dmat_adjusted_volume of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.


        :param dmat_adjusted_volume: The dmat_adjusted_volume of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :type: float
        """

        self._dmat_adjusted_volume = dmat_adjusted_volume

    @property
    def arbitrage_adjusted_volume(self):
        """Gets the arbitrage_adjusted_volume of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501


        :return: The arbitrage_adjusted_volume of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :rtype: float
        """
        return self._arbitrage_adjusted_volume

    @arbitrage_adjusted_volume.setter
    def arbitrage_adjusted_volume(self, arbitrage_adjusted_volume):
        """Sets the arbitrage_adjusted_volume of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.


        :param arbitrage_adjusted_volume: The arbitrage_adjusted_volume of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :type: float
        """

        self._arbitrage_adjusted_volume = arbitrage_adjusted_volume

    @property
    def niv_adjusted_volume(self):
        """Gets the niv_adjusted_volume of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501


        :return: The niv_adjusted_volume of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :rtype: float
        """
        return self._niv_adjusted_volume

    @niv_adjusted_volume.setter
    def niv_adjusted_volume(self, niv_adjusted_volume):
        """Sets the niv_adjusted_volume of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.


        :param niv_adjusted_volume: The niv_adjusted_volume of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :type: float
        """

        self._niv_adjusted_volume = niv_adjusted_volume

    @property
    def par_adjusted_volume(self):
        """Gets the par_adjusted_volume of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501


        :return: The par_adjusted_volume of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :rtype: float
        """
        return self._par_adjusted_volume

    @par_adjusted_volume.setter
    def par_adjusted_volume(self, par_adjusted_volume):
        """Sets the par_adjusted_volume of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.


        :param par_adjusted_volume: The par_adjusted_volume of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :type: float
        """

        self._par_adjusted_volume = par_adjusted_volume

    @property
    def final_price(self):
        """Gets the final_price of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501


        :return: The final_price of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :rtype: float
        """
        return self._final_price

    @final_price.setter
    def final_price(self, final_price):
        """Sets the final_price of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.


        :param final_price: The final_price of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :type: float
        """

        self._final_price = final_price

    @property
    def transmission_loss_multiplier(self):
        """Gets the transmission_loss_multiplier of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501


        :return: The transmission_loss_multiplier of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :rtype: float
        """
        return self._transmission_loss_multiplier

    @transmission_loss_multiplier.setter
    def transmission_loss_multiplier(self, transmission_loss_multiplier):
        """Sets the transmission_loss_multiplier of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.


        :param transmission_loss_multiplier: The transmission_loss_multiplier of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :type: float
        """

        self._transmission_loss_multiplier = transmission_loss_multiplier

    @property
    def tlm_adjusted_volume(self):
        """Gets the tlm_adjusted_volume of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501


        :return: The tlm_adjusted_volume of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :rtype: float
        """
        return self._tlm_adjusted_volume

    @tlm_adjusted_volume.setter
    def tlm_adjusted_volume(self, tlm_adjusted_volume):
        """Sets the tlm_adjusted_volume of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.


        :param tlm_adjusted_volume: The tlm_adjusted_volume of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :type: float
        """

        self._tlm_adjusted_volume = tlm_adjusted_volume

    @property
    def tlm_adjusted_cost(self):
        """Gets the tlm_adjusted_cost of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501


        :return: The tlm_adjusted_cost of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :rtype: float
        """
        return self._tlm_adjusted_cost

    @tlm_adjusted_cost.setter
    def tlm_adjusted_cost(self, tlm_adjusted_cost):
        """Sets the tlm_adjusted_cost of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.


        :param tlm_adjusted_cost: The tlm_adjusted_cost of this InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse.  # noqa: E501
        :type: float
        """

        self._tlm_adjusted_cost = tlm_adjusted_cost

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InsightsApiModelsResponsesBalancingSettlementSettlementStackResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
